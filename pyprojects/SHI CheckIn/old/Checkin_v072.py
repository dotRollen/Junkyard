from PyQt4 import QtCore, QtGui
from checkin_inventory import *
from openpyxl import Workbook
from openpyxl.styles import PatternFill, Border, Side, Alignment, Protection, Font
import subprocess, os, platform, re, time, sys, openpyxl

save_path = os.path.expanduser('~\Documents\Security Checkin Archive')
save_filename = './SHI_Device_Log_' + time.strftime("%m-%d-%y") + '.xlsx'
active_workbook = os.path.join(save_path, save_filename)

if not os.path.exists(save_path):
    os.makedirs(save_path)

if os.path.isfile(save_path + save_filename):
	wb = openpyxl.load_workbook(active_workbook,)
	ws1 = wb.get_sheet_by_name('Log Archive')

else:
	wb = Workbook()
	ws1 = wb.active
	ws1.title = 'Log Archive'
	labels = ['Name', 'Device', 'Item Description', 'Item Serial #', 'Asset Tag #', 'IN', 'OUT', 'STAY IN']
	ws1.append(labels)
	cd = ws1.column_dimensions
	cd["A"].width = '18'
	cd["B"].width = '30'
	cd["C"].width = '40'
	cd["D"].width = '41'
	cd["E"].width = '15'
	cd["F"].width, cd["G"].width, cd["H"].width = '18', '18', '18'
	wb.save(filename = active_workbook)

try:
    _fromUtf8 = QtCore.QString.fromUtf8
except AttributeError:
    def _fromUtf8(s):
        return s

try:
    _encoding = QtGui.QApplication.UnicodeUTF8
    def _translate(context, text, disambig):
        return QtGui.QApplication.translate(context, text, disambig, _encoding)
except AttributeError:
    def _translate(context, text, disambig):
        return QtGui.QApplication.translate(context, text, disambig)

class Validator(QtGui.QValidator):
	def validate(self, string, pos):
		string.replace(0, string.count(), string.toUpper())
		return QtGui.QValidator.Acceptable, pos

class Ui_SHICheckIn(QtGui.QMainWindow):

	def __init__(self):
		QtGui.QMainWindow.__init__(self)
		self.setupUi(self)

	def open_directory(self):
		os.startfile(save_path)

# Check in new registered user ----------------------------------------------v
	def clear_new_in_fields(self):
		self.chkin_new_name_in.clear()
		self.chkin_drpmn_device.setCurrentIndex(-1)
		self.chkin_new_serial_in.clear()
		self.chkin_new_asset_in.clear()
		self.chkin_new_descr_in.clear()
		
	def new_submit_chkin(self):
		chkin_new_name_text = str(self.chkin_new_name_in.displayText())
		chkin_new_device_text = str(self.chkin_drpmn_device.currentText())
		chkin_new_serial_text = str(self.chkin_new_serial_in.displayText())
		chkin_new_asset_text = str(self.chkin_new_asset_in.displayText())
		chkin_new_descr_text = str(self.chkin_new_descr_in.displayText())
		chkin_ndata = ( chkin_new_name_text, chkin_new_device_text, 
						chkin_new_descr_text, chkin_new_serial_text, 
						chkin_new_asset_text, time.strftime("%m/%d/%y %I:%M - %p") )
		matching_row_nbr = None
		log_name = None
		logged_in = True
		for rowNum in range(2, ws1.max_row + 1 ):
			log_name = ws1.cell(row=rowNum,column=1).value
		if log_name == chkin_new_name_text and chkin_new_serial_text > "" and chkin_new_asset_text > "":
			for rowNum in range(2, ws1.max_row + 1 ):
				log_name = ws1.cell(row=rowNum,column=1).value
				log_device = ws1.cell(row=rowNum,column=2).value
				log_serial = ws1.cell(row=rowNum,column=4).value
				log_asset = ws1.cell(row=rowNum,column=5).value
				if log_name == chkin_new_name_text and chkin_new_device_text == log_device and chkin_new_serial_text == log_serial and chkin_new_asset_text == log_asset:
					matching_row_nbr = rowNum
					break
				else:
					logged_in = False
			if matching_row_nbr is not None:
				ws1.cell(row=matching_row_nbr, column=6).value = str(time.strftime("%m/%d/%y %I:%M - %p"))
				wb.save(filename = active_workbook)
				QtGui.QMessageBox.about(self.centralwidget, "Device Check In - UPDATE SUCCESSFUL", chkin_new_device_text + " has been succesfully checked in by " + chkin_new_name_text + " on " + time.strftime("%m/%d/%y %I:%M - %p") + ".")
				self.clear_new_in_fields()
			elif logged_in == False: 
				ws1.append(chkin_ndata)
				wb.save(filename = active_workbook)
				QtGui.QMessageBox.about(self.centralwidget, "Device Check In - DEVICE ADDED SUCCESSFULLY", chkin_new_device_text + " has been succesfully checked in by " + chkin_new_name_text + " on " + time.strftime("%m/%d/%y %I:%M - %p") + ". Other additional devices have been recently logged with this name. Please make sure all devices are accounted for.")
				self.clear_new_in_fields()
			else:
				print "pizza time"
		elif len(chkin_new_name_text) == "" or chkin_new_serial_text == "" or chkin_new_asset_text == "":
			QtGui.QMessageBox.about(self.centralwidget, "Device Check In - INCOMPLETE!","Required: Visitor/Employee name, devie, serial and asset tag. Please make sure all the information is filled in.")
		else:
			ws1.append(chkin_ndata)
			wb.save(filename = active_workbook)
			QtGui.QMessageBox.about(self.centralwidget, "Device Check In - COMPLETE", chkin_new_device_text + " has been succesfully checked in by " + chkin_new_name_text + " on " + time.strftime("%m/%d/%y %I:%M - %p") + ".")
			self.clear_new_in_fields()
# End check in new registered user -----------------------------------------------^
	
# Check in regular registered user -----------------------------------------------v
	def chkin_reg_autofill(self, currentIndex):
		if currentIndex >= -1: 
			self.chkin_reg_device_in.setText(var[currentIndex][0])
			self.chkin_reg_serial_in.setText(var[currentIndex][1])
			self.chkin_reg_asset_in.setText(var[currentIndex][2])
			self.chkin_reg_descr_in.setText(var[currentIndex][3])
			
	def clear_reg_in_fields(self):
		self.chkin_drpmn_name.setCurrentIndex(-1)
		self.chkin_reg_device_in.clear()
		self.chkin_reg_serial_in.clear()
		self.chkin_reg_asset_in.clear()
		self.chkin_reg_descr_in.clear()
		
	def reg_submit_chkin(self):
		chkin_reg_name_text = str(self.chkin_drpmn_name.currentText())
		chkin_reg_device_text = str(self.chkin_reg_device_in.displayText())
		chkin_reg_serial_text = str(self.chkin_reg_serial_in.displayText())
		chkin_reg_asset_text = str(self.chkin_reg_asset_in.displayText())
		chkin_reg_descr_text = str(self.chkin_reg_descr_in.displayText())
		chkin_rdata = ( chkin_reg_name_text, chkin_reg_device_text, chkin_reg_descr_text, 
						chkin_reg_serial_text, chkin_reg_asset_text, time.strftime("%m/%d/%y %I:%M - %p") )
		matching_row_nbr = None
		log_name = None
		logged_in = True
		for rowNum in range(2, ws1.max_row + 1 ):
			log_name = ws1.cell(row=rowNum,column=1).value
		if log_name == chkin_reg_name_text and chkin_reg_serial_text > "" and chkin_reg_asset_text > "":
			for rowNum in range(2, ws1.max_row + 1 ):
				log_name = ws1.cell(row=rowNum,column=1).value
				log_device = ws1.cell(row=rowNum,column=2).value
				log_serial = ws1.cell(row=rowNum,column=4).value
				log_asset = ws1.cell(row=rowNum,column=5).value
				if log_name == chkin_reg_name_text and chkin_reg_device_text == log_device and chkin_reg_serial_text == log_serial and chkin_reg_asset_text == log_asset:
					matching_row_nbr = rowNum
					break
				else:
					logged_in = False
			if matching_row_nbr is not None:
				ws1.cell(row=matching_row_nbr, column=6).value = str(time.strftime("%m/%d/%y %I:%M - %p"))
				wb.save(filename = active_workbook)
				QtGui.QMessageBox.about(self.centralwidget, "Device Check In - UPDATE SUCCESSFUL", chkin_reg_device_text + " has been succesfully checked in by " + chkin_reg_name_text + " on " + time.strftime("%m/%d/%y %I:%M - %p") + ".")
				self.clear_reg_in_fields()
			elif logged_in == False: 
				ws1.append(chkin_rdata)
				wb.save(filename = active_workbook)
				QtGui.QMessageBox.about(self.centralwidget, "Device Check In - DEVICE ADDED SUCCESSFULLY", chkin_reg_device_text + " has been succesfully checked in by " + chkin_reg_name_text + " on " + time.strftime("%m/%d/%y %I:%M - %p") + ". Other additional devices have been recently logged with this name. Please make sure all devices are accounted for.")
				self.clear_reg_in_fields()
		elif len(chkin_reg_name_text) == "" or chkin_reg_serial_text == "" or chkin_reg_asset_text == "":
			QtGui.QMessageBox.about(self.centralwidget, "Device Check In - INCOMPLETE!","Required: Visitor/Employee name, devie, serial and asset tag. Please make sure all the information is filled in.")
		else:
			ws1.append(chkin_rdata)
			wb.save(filename = active_workbook)
			QtGui.QMessageBox.about(self.centralwidget, "Device Check In - COMPLETE", chkin_reg_device_text + " has been succesfully checked in by " + chkin_reg_name_text + " on " + time.strftime("%m/%d/%y %I:%M - %p") + ".")
			self.clear_reg_in_fields()
		
# End check in regular registered user -------------------------------------------^
	
# Check out new registered user --------------------------------------------------v
	def clear_new_out_fields(self):
		self.chkout_new_name_in.clear()
		self.chkout_drpmn_device.setCurrentIndex(-1)
		self.chkout_new_serial_in.clear()
		self.chkout_new_asset_in.clear()
		self.chkout_new_descr_in.clear()
		
	def new_submit_chkout(self):
		chkout_new_name_text = str(self.chkout_new_name_in.displayText())
		chkout_new_device_text = str(self.chkout_drpmn_device.currentText())
		chkout_new_serial_text = str(self.chkout_new_serial_in.displayText())
		chkout_new_asset_text = str(self.chkout_new_asset_in.displayText())
		chkout_new_descr_text = str(self.chkout_new_descr_in.displayText())
		chkout_ndata = ( chkout_new_name_text, chkout_new_device_text, chkout_new_descr_text,
						chkout_new_serial_text, chkout_new_asset_text, '', time.strftime("%m/%d/%y %I:%M - %p"))
		matching_row_nbr = None
		log_name = None
		logged_in = True
		for rowNum in range(2, ws1.max_row + 1 ):
			log_name = ws1.cell(row=rowNum,column=1).value
		if log_name == chkout_new_name_text and chkout_new_serial_text > "" and chkout_new_asset_text > "":
			for rowNum in range(2, ws1.max_row + 1 ):
				log_name = ws1.cell(row=rowNum,column=1).value
				log_device = ws1.cell(row=rowNum,column=2).value
				log_serial = ws1.cell(row=rowNum,column=4).value
				log_asset = ws1.cell(row=rowNum,column=5).value
				if log_name == chkout_new_name_text and chkout_new_device_text == log_device and chkout_new_serial_text == log_serial and chkout_new_asset_text == log_asset:
					matching_row_nbr = rowNum
					break
				else:
					logged_in = False
			if matching_row_nbr is not None:
				ws1.cell(row=matching_row_nbr, column=7).value = str(time.strftime("%m/%d/%y %I:%M - %p"))
				wb.save(filename = active_workbook)
				QtGui.QMessageBox.about(self.centralwidget, "Device Check Out - UPDATE SUCCESSFUL", chkout_new_device_text + " has been succesfully checked out by " + chkout_new_name_text + " on " + time.strftime("%m/%d/%y %I:%M - %p") + ".")
				self.clear_new_out_fields()
			elif logged_in == False: 
				ws1.append(chkout_ndata)
				wb.save(filename = active_workbook)
				QtGui.QMessageBox.about(self.centralwidget, "Device Check Out - DEVICE ADDED SUCCESSFULLY", chkout_new_device_text + " has been succesfully checked out by " + chkout_new_name_text + " on " + time.strftime("%m/%d/%y %I:%M - %p") + ". Other additional devices have been recently logged with this name. Please make sure all devices are accounted for.")
				self.clear_new_out_fields()
		elif len(chkout_new_name_text) == "" or chkout_new_serial_text == "" or chkout_new_asset_text == "":
			QtGui.QMessageBox.about(self.centralwidget, "Device Check Out - INCOMPLETE!","Required: Visitor/Employee name, devie, serial and asset tag. Please make sure all the information is filled in.")
		else:
			ws1.append(chkout_ndata)
			wb.save(filename = active_workbook)
			QtGui.QMessageBox.about(self.centralwidget, "Device Check Out - COMPLETE", chkout_new_device_text + " has been succesfully checked out by " + chkout_new_name_text + " on " + time.strftime("%m/%d/%y %I:%M - %p") + ".")
			self.clear_new_out_fields()
# End check out new registered user ---------------------------------------------^
	
# Check out regular registered user ---------------------------------------------v
	def chkout_reg_autofill(self, currentIndex):
		if currentIndex >= -1: 
			self.chkout_reg_device_in.setText(var[currentIndex][0])
			self.chkout_reg_serial_in.setText(var[currentIndex][1])
			self.chkout_reg_asset_in.setText(var[currentIndex][2])
			self.chkout_reg_descr_in.setText(var[currentIndex][3])
	
	def clear_reg_out_fields(self):
		self.chkout_drpmn_name.setCurrentIndex(-1)
		self.chkout_reg_device_in.clear()
		self.chkout_reg_serial_in.clear()
		self.chkout_reg_asset_in.clear()
		self.chkout_reg_descr_in.clear()

	def reg_submit_chkout(self):
		chkout_reg_name_text = str(self.chkout_drpmn_name.currentText())
		chkout_reg_device_text = str(self.chkout_reg_device_in.displayText())
		chkout_reg_serial_text = str(self.chkout_reg_serial_in.displayText())
		chkout_reg_asset_text = str(self.chkout_reg_asset_in.displayText())
		chkout_reg_descr_text = str(self.chkout_reg_descr_in.displayText())
		chkout_rdata = ( chkout_reg_name_text, chkout_reg_device_text, chkout_reg_descr_text, 
						chkout_reg_serial_text, chkout_reg_asset_text, '', time.strftime("%m/%d/%y %I:%M - %p") )
		matching_row_nbr = None
		log_name = None
		logged_in = True
		for rowNum in range(2, ws1.max_row + 1 ):
			log_name = ws1.cell(row=rowNum,column=1).value
			log_device = ws1.cell(row=rowNum,column=2).value
		if log_name == chkout_reg_name_text and chkout_reg_serial_text > "" and chkout_reg_asset_text > "":
			for rowNum in range(2, ws1.max_row + 1 ):
				log_name = ws1.cell(row=rowNum,column=1).value
				log_device = ws1.cell(row=rowNum,column=2).value
				log_serial = ws1.cell(row=rowNum,column=4).value
				log_asset = ws1.cell(row=rowNum,column=5).value
				if log_name == chkout_reg_name_text and chkout_reg_device_text == log_device and chkout_reg_serial_text == log_serial and chkout_reg_asset_text == log_asset:
					matching_row_nbr = rowNum
					break
				else:
					logged_in = False
			if matching_row_nbr is not None:
				ws1.cell(row=matching_row_nbr, column=7).value = str(time.strftime("%m/%d/%y %I:%M - %p"))
				wb.save(filename = active_workbook)
				QtGui.QMessageBox.about(self.centralwidget, "Device Check Out - UPDATE SUCCESSFUL", chkout_reg_device_text + " has been succesfully checked out by " + chkout_reg_name_text + " on " + time.strftime("%m/%d/%y %I:%M - %p") + ".")
				self.clear_reg_out_fields()
			elif logged_in == False: 
				ws1.append(chkout_rdata)
				wb.save(filename = active_workbook)
				QtGui.QMessageBox.about(self.centralwidget, "Device Check Out - DEVICE ADDED SUCCESSFULLY", chkout_reg_device_text + " has been succesfully checked out by " + chkout_reg_name_text + " on " + time.strftime("%m/%d/%y %I:%M - %p") + ". Other additional devices have been recently logged with this name. Please make sure all devices are accounted for.")
				self.clear_reg_out_fields()
		elif len(chkout_reg_name_text) == "" or chkout_reg_device_text == "" or chkout_reg_serial_text == "" or chkout_reg_asset_text == "":
			QtGui.QMessageBox.about(self.centralwidget, "Device Check Out - INCOMPLETE!","Required: Visitor/Employee name, devie, serial and asset tag. Please make sure all the information is filled in.")
		else:
			ws1.append(chkout_rdata)
			wb.save(filename = active_workbook)
			QtGui.QMessageBox.about(self.centralwidget, "Device Check Out - COMPLETE", chkout_reg_device_text + " has been succesfully checked out by " + chkout_reg_name_text + " on " + time.strftime("%m/%d/%y %I:%M - %p") + ".")
			self.clear_reg_out_fields()

# End check out new registered user --------------------------------------------^
	def setupUi(self, SHICheckIn):
		SHICheckIn.setObjectName(_fromUtf8("SHICheckIn"))
		SHICheckIn.resize(1291, 866)
		SHICheckIn.setMinimumSize(QtCore.QSize(1291, 866))
		SHICheckIn.setMaximumSize(QtCore.QSize(1291, 866))
		self.setWindowIcon(QtGui.QIcon('Security.png'))
		self.centralwidget = QtGui.QWidget(SHICheckIn)
		self.centralwidget.setMinimumSize(QtCore.QSize(1291, 825))
		self.centralwidget.setMaximumSize(QtCore.QSize(1291, 825))
		self.centralwidget.setObjectName(_fromUtf8("centralwidget"))
		self.tabWidget = QtGui.QTabWidget(self.centralwidget)
		self.tabWidget.setGeometry(QtCore.QRect(10, 10, 931, 761))
		self.tabWidget.setMinimumSize(QtCore.QSize(931, 761))
		font = QtGui.QFont()
		font.setPointSize(18)
		self.tabWidget.setFont(font)
		self.tabWidget.setObjectName(_fromUtf8("tabWidget"))
		self.tab = QtGui.QWidget()
		self.tab.setObjectName(_fromUtf8("tab"))
# Check in new registered user ------------------------------------------v
		self.chkin_new_title = QtGui.QLabel(self.tab)
		self.chkin_new_title.setGeometry(QtCore.QRect(30, 10, 602, 40))
		self.chkin_new_title.setMinimumSize(QtCore.QSize(602, 40))
		font = QtGui.QFont()
		font.setPointSize(25)
		font.setBold(True)
		font.setWeight(75)
		self.chkin_new_title.setFont(font)
		self.chkin_new_title.setObjectName(_fromUtf8("chkin_new_title"))
		self.chkin_new_name = QtGui.QLabel(self.tab)
		self.chkin_new_name.setGeometry(QtCore.QRect(30, 70, 89, 33))
		self.chkin_new_name.setMinimumSize(QtCore.QSize(89, 33))
		font = QtGui.QFont()
		font.setPointSize(20)
		font.setBold(True)
		font.setWeight(75)
		self.chkin_new_name.setFont(font)
		self.chkin_new_name.setObjectName(_fromUtf8("chkin_new_name"))
		self.chkin_new_name_in = QtGui.QLineEdit(self.tab)
		self.chkin_new_name_in.setGeometry(QtCore.QRect(140, 70, 761, 39))
		self.chkin_new_name_in.setMinimumSize(QtCore.QSize(761, 39))
		font = QtGui.QFont()
		font.setPointSize(20)
		self.chkin_new_name_in.setFont(font)
		self.chkin_new_name_in.setObjectName(_fromUtf8("chkin_new_name_in"))
		self.validator = Validator(self)
		self.chkin_new_name_in.setValidator(self.validator)
		self.chkin_new_device = QtGui.QLabel(self.tab)
		self.chkin_new_device.setGeometry(QtCore.QRect(30, 130, 100, 33))
		self.chkin_new_device.setMinimumSize(QtCore.QSize(100, 33))
		font = QtGui.QFont()
		font.setPointSize(20)
		font.setBold(True)
		font.setWeight(75)
		self.chkin_new_device.setFont(font)
		self.chkin_new_device.setObjectName(_fromUtf8("chkin_new_device"))
		self.chkin_drpmn_device = QtGui.QComboBox(self.tab)
		self.chkin_drpmn_device.setGeometry(QtCore.QRect(150, 130, 351, 39))
		self.chkin_drpmn_device.setMinimumSize(QtCore.QSize(351, 39))
		font = QtGui.QFont()
		font.setPointSize(20)
		self.chkin_drpmn_device.setFont(font)
		self.chkin_drpmn_device.setObjectName(_fromUtf8("chkin_drpmn_device"))
		self.chkin_drpmn_device.addItem(_fromUtf8(""))
		self.chkin_drpmn_device.addItem(_fromUtf8(""))
		self.chkin_drpmn_device.addItem(_fromUtf8(""))
		self.chkin_drpmn_device.addItem(_fromUtf8(""))
		self.chkin_drpmn_device.addItem(_fromUtf8(""))
		self.chkin_drpmn_device.addItem(_fromUtf8(""))
		self.chkin_drpmn_device.addItem(_fromUtf8(""))
		self.chkin_drpmn_device.addItem(_fromUtf8(""))
		self.chkin_drpmn_device.addItem(_fromUtf8(""))
		self.chkin_drpmn_device.addItem(_fromUtf8(""))
		self.chkin_drpmn_device.addItem(_fromUtf8(""))
		self.chkin_drpmn_device.setCurrentIndex(-1)
		self.chkin_new_serial = QtGui.QLabel(self.tab)
		self.chkin_new_serial.setGeometry(QtCore.QRect(30, 190, 117, 33))
		self.chkin_new_serial.setMinimumSize(QtCore.QSize(117, 33))
		font = QtGui.QFont()
		font.setPointSize(20)
		font.setBold(True)
		font.setWeight(75)
		self.chkin_new_serial.setFont(font)
		self.chkin_new_serial.setObjectName(_fromUtf8("chkin_new_serial"))
		self.chkin_new_serial_in = QtGui.QLineEdit(self.tab)
		self.chkin_new_serial_in.setGeometry(QtCore.QRect(170, 190, 252, 39))
		self.chkin_new_serial_in.setMinimumSize(QtCore.QSize(252, 39))
		font = QtGui.QFont()
		font.setPointSize(20)
		self.chkin_new_serial_in.setFont(font)
		self.chkin_new_serial_in.setObjectName(_fromUtf8("chkin_new_serial_in"))
		self.chkin_new_serial_in.setValidator(self.validator)
		self.chkin_new_asset = QtGui.QLabel(self.tab)
		self.chkin_new_asset.setGeometry(QtCore.QRect(440, 190, 171, 33))
		self.chkin_new_asset.setMinimumSize(QtCore.QSize(171, 33))
		font = QtGui.QFont()
		font.setPointSize(20)
		font.setBold(True)
		font.setWeight(75)
		self.chkin_new_asset.setFont(font)
		self.chkin_new_asset.setObjectName(_fromUtf8("chkin_new_asset"))
		self.chkin_new_asset_in = QtGui.QLineEdit(self.tab)
		self.chkin_new_asset_in.setGeometry(QtCore.QRect(630, 190, 271, 39))
		self.chkin_new_asset_in.setMinimumSize(QtCore.QSize(271, 39))
		font = QtGui.QFont()
		font.setPointSize(20)
		self.chkin_new_asset_in.setFont(font)
		self.chkin_new_asset_in.setObjectName(_fromUtf8("chkin_new_asset_in"))
		self.chkin_new_asset_in.setValidator(self.validator)
		self.chkin_new_descr = QtGui.QLabel(self.tab)
		self.chkin_new_descr.setGeometry(QtCore.QRect(30, 250, 164, 33))
		self.chkin_new_descr.setMinimumSize(QtCore.QSize(164, 33))
		font = QtGui.QFont()
		font.setPointSize(20)
		font.setBold(True)
		font.setWeight(75)
		self.chkin_new_descr.setFont(font)
		self.chkin_new_descr.setObjectName(_fromUtf8("chkin_new_descr"))
		self.chkin_new_descr_in = QtGui.QLineEdit(self.tab)
		self.chkin_new_descr_in.setGeometry(QtCore.QRect(210, 250, 691, 39))
		self.chkin_new_descr_in.setMinimumSize(QtCore.QSize(691, 39))
		font = QtGui.QFont()
		font.setPointSize(20)
		self.chkin_new_descr_in.setFont(font)
		self.chkin_new_descr_in.setObjectName(_fromUtf8("chkin_new_descr_in"))
		self.chkin_new_descr_in.setValidator(self.validator)
		self.chkin_new_submit = QtGui.QPushButton(self.tab)
		self.chkin_new_submit.setGeometry(QtCore.QRect(30, 300, 127, 37))
		self.chkin_new_submit.setMinimumSize(QtCore.QSize(127, 37))
		self.chkin_new_submit.setObjectName(_fromUtf8("chkin_new_submit"))
		self.chkin_new_submit.clicked.connect(self.new_submit_chkin)
# End check in new registered user ------------------------------------------^
		self.chkin_divider = QtGui.QFrame(self.tab)
		self.chkin_divider.setGeometry(QtCore.QRect(10, 350, 911, 16))
		self.chkin_divider.setMinimumSize(QtCore.QSize(911, 16))
		self.chkin_divider.setFrameShape(QtGui.QFrame.HLine)
		self.chkin_divider.setFrameShadow(QtGui.QFrame.Sunken)
		self.chkin_divider.setObjectName(_fromUtf8("chkin_divider"))
# Check in regular registered user ------------------------------------------v
		self.chkin_reg_title = QtGui.QLabel(self.tab)
		self.chkin_reg_title.setGeometry(QtCore.QRect(30, 380, 700, 40))
		self.chkin_reg_title.setMinimumSize(QtCore.QSize(700, 40))
		font = QtGui.QFont()
		font.setPointSize(25)
		font.setBold(True)
		font.setWeight(75)
		self.chkin_reg_title.setFont(font)
		self.chkin_reg_title.setObjectName(_fromUtf8("chkin_reg_title"))
		self.chkin_reg_name = QtGui.QLabel(self.tab)
		self.chkin_reg_name.setGeometry(QtCore.QRect(30, 440, 89, 33))
		self.chkin_reg_name.setMinimumSize(QtCore.QSize(89, 33))
		font = QtGui.QFont()
		font.setPointSize(20)
		font.setBold(True)
		font.setWeight(75)
		self.chkin_reg_name.setFont(font)
		self.chkin_reg_name.setObjectName(_fromUtf8("chkin_reg_name"))
		self.chkin_drpmn_name = QtGui.QComboBox(self.tab)
		self.chkin_drpmn_name.setGeometry(QtCore.QRect(140, 440, 351, 39))
		self.chkin_drpmn_name.setMinimumSize(QtCore.QSize(351, 39))
		font = QtGui.QFont()
		font.setPointSize(20)
		self.chkin_drpmn_name.setFont(font)
		self.chkin_drpmn_name.setObjectName(_fromUtf8("chkin_drpmn_name"))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.setCurrentIndex(-1)
		self.connect(self.chkin_drpmn_name, QtCore.SIGNAL('currentIndexChanged(int)'), self.chkin_reg_autofill)
		self.chkin_reg_device = QtGui.QLabel(self.tab)
		self.chkin_reg_device.setGeometry(QtCore.QRect(30, 500, 100, 33))
		self.chkin_reg_device.setMinimumSize(QtCore.QSize(100, 33))
		font = QtGui.QFont()
		font.setPointSize(20)
		font.setBold(True)
		font.setWeight(75)
		self.chkin_reg_device.setFont(font)
		self.chkin_reg_device.setObjectName(_fromUtf8("chkin_reg_device"))
		self.chkin_reg_device_in = QtGui.QLineEdit(self.tab)
		self.chkin_reg_device_in.setGeometry(QtCore.QRect(150, 500, 741, 39))
		self.chkin_reg_device_in.setMinimumSize(QtCore.QSize(741, 39))
		font = QtGui.QFont()
		font.setPointSize(20)
		self.chkin_reg_device_in.setFont(font)
		self.chkin_reg_device_in.setObjectName(_fromUtf8("chkin_reg_device_in"))
		self.chkin_reg_device_in.setValidator(self.validator)
		self.chkin_reg_serial = QtGui.QLabel(self.tab)
		self.chkin_reg_serial.setGeometry(QtCore.QRect(30, 560, 117, 33))
		self.chkin_reg_serial.setMinimumSize(QtCore.QSize(117, 33))
		font = QtGui.QFont()
		font.setPointSize(20)
		font.setBold(True)
		font.setWeight(75)
		self.chkin_reg_serial.setFont(font)
		self.chkin_reg_serial.setObjectName(_fromUtf8("chkin_reg_serial"))
		self.chkin_reg_serial_in = QtGui.QLineEdit(self.tab)
		self.chkin_reg_serial_in.setGeometry(QtCore.QRect(170, 560, 261, 39))
		self.chkin_reg_serial_in.setMinimumSize(QtCore.QSize(261, 39))
		font = QtGui.QFont()
		font.setPointSize(20)
		self.chkin_reg_serial_in.setFont(font)
		self.chkin_reg_serial_in.setObjectName(_fromUtf8("chkin_reg_serial_in"))
		self.chkin_reg_serial_in.setValidator(self.validator)
		self.chkin_reg_asset = QtGui.QLabel(self.tab)
		self.chkin_reg_asset.setGeometry(QtCore.QRect(450, 560, 171, 33))
		self.chkin_reg_asset.setMinimumSize(QtCore.QSize(171, 33))
		font = QtGui.QFont()
		font.setPointSize(20)
		font.setBold(True)
		font.setWeight(75)
		self.chkin_reg_asset.setFont(font)
		self.chkin_reg_asset.setObjectName(_fromUtf8("chkin_reg_asset"))
		self.chkin_reg_asset_in = QtGui.QLineEdit(self.tab)
		self.chkin_reg_asset_in.setGeometry(QtCore.QRect(640, 560, 251, 39))
		self.chkin_reg_asset_in.setMinimumSize(QtCore.QSize(251, 39))
		font = QtGui.QFont()
		font.setPointSize(20)
		self.chkin_reg_asset_in.setFont(font)
		self.chkin_reg_asset_in.setObjectName(_fromUtf8("chkin_reg_asset_in"))
		self.chkin_reg_asset_in.setValidator(self.validator)
		self.chkin_reg_descr = QtGui.QLabel(self.tab)
		self.chkin_reg_descr.setGeometry(QtCore.QRect(30, 620, 164, 33))
		self.chkin_reg_descr.setMinimumSize(QtCore.QSize(164, 33))
		font = QtGui.QFont()
		font.setPointSize(20)
		font.setBold(True)
		font.setWeight(75)
		self.chkin_reg_descr.setFont(font)
		self.chkin_reg_descr.setObjectName(_fromUtf8("chkin_reg_descr"))
		self.chkin_reg_descr_in = QtGui.QLineEdit(self.tab)
		self.chkin_reg_descr_in.setGeometry(QtCore.QRect(210, 620, 681, 39))
		self.chkin_reg_descr_in.setMinimumSize(QtCore.QSize(681, 39))
		font = QtGui.QFont()
		font.setPointSize(20)
		self.chkin_reg_descr_in.setFont(font)
		self.chkin_reg_descr_in.setObjectName(_fromUtf8("chkin_reg_descr_in"))
		self.chkin_reg_descr_in.setValidator(self.validator)
		self.chkin_reg_submit = QtGui.QPushButton(self.tab)
		self.chkin_reg_submit.setGeometry(QtCore.QRect(30, 670, 127, 37))
		self.chkin_reg_submit.setMinimumSize(QtCore.QSize(127, 37))
		self.chkin_reg_submit.setObjectName(_fromUtf8("chkin_reg_submit"))
		self.chkin_reg_submit.clicked.connect(self.reg_submit_chkin)
# End check in regular registered user ------------------------------------------^
# Check out new registered user -------------------------------------------------v
		self.tabWidget.addTab(self.tab, _fromUtf8(""))
		self.tab_2 = QtGui.QWidget()
		self.tab_2.setObjectName(_fromUtf8("tab_2"))
		self.chkout_new_title = QtGui.QLabel(self.tab_2)
		self.chkout_new_title.setGeometry(QtCore.QRect(30, 10, 630, 40))
		font = QtGui.QFont()
		font.setPointSize(25)
		font.setBold(True)
		font.setWeight(75)
		self.chkout_new_title.setFont(font)
		self.chkout_new_title.setObjectName(_fromUtf8("chkout_new_title"))
		self.chkout_new_name = QtGui.QLabel(self.tab_2)
		self.chkout_new_name.setGeometry(QtCore.QRect(30, 70, 89, 33))
		font = QtGui.QFont()
		font.setPointSize(20)
		font.setBold(True)
		font.setWeight(75)
		self.chkout_new_name.setFont(font)
		self.chkout_new_name.setObjectName(_fromUtf8("chkout_new_name"))
		self.chkout_new_name_in = QtGui.QLineEdit(self.tab_2)
		self.chkout_new_name_in.setGeometry(QtCore.QRect(140, 70, 761, 39))
		font = QtGui.QFont()
		font.setPointSize(20)
		self.chkout_new_name_in.setFont(font)
		self.chkout_new_name_in.setObjectName(_fromUtf8("chkout_new_name_in"))
		self.chkout_new_name_in.setValidator(self.validator)
		self.chkout_new_device = QtGui.QLabel(self.tab_2)
		self.chkout_new_device.setGeometry(QtCore.QRect(30, 130, 100, 33))
		font = QtGui.QFont()
		font.setPointSize(20)
		font.setBold(True)
		font.setWeight(75)
		self.chkout_new_device.setFont(font)
		self.chkout_new_device.setObjectName(_fromUtf8("chkout_new_device"))
		self.chkout_drpmn_device = QtGui.QComboBox(self.tab_2)
		self.chkout_drpmn_device.setGeometry(QtCore.QRect(150, 130, 351, 39))
		font = QtGui.QFont()
		font.setPointSize(20)
		self.chkout_drpmn_device.setFont(font)
		self.chkout_drpmn_device.setObjectName(_fromUtf8("chkout_drpmn_device"))
		self.chkout_drpmn_device.addItem(_fromUtf8(""))
		self.chkout_drpmn_device.addItem(_fromUtf8(""))
		self.chkout_drpmn_device.addItem(_fromUtf8(""))
		self.chkout_drpmn_device.addItem(_fromUtf8(""))
		self.chkout_drpmn_device.addItem(_fromUtf8(""))
		self.chkout_drpmn_device.addItem(_fromUtf8(""))
		self.chkout_drpmn_device.addItem(_fromUtf8(""))
		self.chkout_drpmn_device.addItem(_fromUtf8(""))
		self.chkout_drpmn_device.addItem(_fromUtf8(""))
		self.chkout_drpmn_device.addItem(_fromUtf8(""))
		self.chkout_drpmn_device.addItem(_fromUtf8(""))
		self.chkout_drpmn_device.setCurrentIndex(-1)
		self.chkout_new_serial = QtGui.QLabel(self.tab_2)
		self.chkout_new_serial.setGeometry(QtCore.QRect(30, 190, 117, 33))
		font = QtGui.QFont()
		font.setPointSize(20)
		font.setBold(True)
		font.setWeight(75)
		self.chkout_new_serial.setFont(font)
		self.chkout_new_serial.setObjectName(_fromUtf8("chkout_new_serial"))
		self.chkout_new_serial_in = QtGui.QLineEdit(self.tab_2)
		self.chkout_new_serial_in.setGeometry(QtCore.QRect(170, 190, 252, 39))
		font = QtGui.QFont()
		font.setPointSize(20)
		self.chkout_new_serial_in.setFont(font)
		self.chkout_new_serial_in.setObjectName(_fromUtf8("chkout_new_serial_in"))
		self.chkout_new_serial_in.setValidator(self.validator)
		self.chkout_new_asset = QtGui.QLabel(self.tab_2)
		self.chkout_new_asset.setGeometry(QtCore.QRect(440, 190, 171, 33))
		font = QtGui.QFont()
		font.setPointSize(20)
		font.setBold(True)
		font.setWeight(75)
		self.chkout_new_asset.setFont(font)
		self.chkout_new_asset.setObjectName(_fromUtf8("chkout_new_asset"))
		self.chkout_new_asset_in = QtGui.QLineEdit(self.tab_2)
		self.chkout_new_asset_in.setGeometry(QtCore.QRect(630, 190, 271, 39))
		font = QtGui.QFont()
		font.setPointSize(20)
		self.chkout_new_asset_in.setFont(font)
		self.chkout_new_asset_in.setObjectName(_fromUtf8("chkout_new_asset_in"))
		self.chkout_new_asset_in.setValidator(self.validator)
		self.chkout_new_descr = QtGui.QLabel(self.tab_2)
		self.chkout_new_descr.setGeometry(QtCore.QRect(30, 250, 164, 33))
		font = QtGui.QFont()
		font.setPointSize(20)
		font.setBold(True)
		font.setWeight(75)
		self.chkout_new_descr.setFont(font)
		self.chkout_new_descr.setObjectName(_fromUtf8("chkout_new_descr"))
		self.chkout_new_descr_in = QtGui.QLineEdit(self.tab_2)
		self.chkout_new_descr_in.setGeometry(QtCore.QRect(210, 250, 691, 39))
		font = QtGui.QFont()
		font.setPointSize(20)
		self.chkout_new_descr_in.setFont(font)
		self.chkout_new_descr_in.setObjectName(_fromUtf8("chkout_new_descr_in"))
		self.chkout_new_descr_in.setValidator(self.validator)
		self.chkout_new_submit = QtGui.QPushButton(self.tab_2)
		self.chkout_new_submit.setGeometry(QtCore.QRect(30, 300, 127, 37))
		self.chkout_new_submit.setObjectName(_fromUtf8("chkout_new_submit"))
		self.chkout_new_submit.clicked.connect(self.new_submit_chkout)
# End check out new registered user ------------------------------------------^		
		self.chkout_divider = QtGui.QFrame(self.tab_2)
		self.chkout_divider.setGeometry(QtCore.QRect(10, 350, 911, 16))
		self.chkout_divider.setFrameShape(QtGui.QFrame.HLine)
		self.chkout_divider.setFrameShadow(QtGui.QFrame.Sunken)
		self.chkout_divider.setObjectName(_fromUtf8("chkout_divider"))
# Check out regular registered user ------------------------------------------v
		self.chkout_reg_title = QtGui.QLabel(self.tab_2)
		self.chkout_reg_title.setGeometry(QtCore.QRect(30, 380, 728, 40))
		font = QtGui.QFont()
		font.setPointSize(25)
		font.setBold(True)
		font.setWeight(75)
		self.chkout_reg_title.setFont(font)
		self.chkout_reg_title.setObjectName(_fromUtf8("chkout_reg_title"))
		self.chkout_reg_name = QtGui.QLabel(self.tab_2)
		self.chkout_reg_name.setGeometry(QtCore.QRect(30, 440, 89, 33))
		font = QtGui.QFont()
		font.setPointSize(20)
		font.setBold(True)
		font.setWeight(75)
		self.chkout_reg_name.setFont(font)
		self.chkout_reg_name.setObjectName(_fromUtf8("chkout_reg_name"))
		self.chkout_drpmn_name = QtGui.QComboBox(self.tab_2)
		self.chkout_drpmn_name.setGeometry(QtCore.QRect(140, 440, 351, 39))
		font = QtGui.QFont()
		font.setPointSize(20)
		self.chkout_drpmn_name.setFont(font)
		self.chkout_drpmn_name.setObjectName(_fromUtf8("chkout_drpmn_name"))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.setCurrentIndex(-1)
		self.connect(self.chkout_drpmn_name, QtCore.SIGNAL('currentIndexChanged(int)'), self.chkout_reg_autofill)
		self.chkout_reg_device = QtGui.QLabel(self.tab_2)
		self.chkout_reg_device.setGeometry(QtCore.QRect(30, 500, 100, 33))
		font = QtGui.QFont()
		font.setPointSize(20)
		font.setBold(True)
		font.setWeight(75)
		self.chkout_reg_device.setFont(font)
		self.chkout_reg_device.setObjectName(_fromUtf8("chkout_reg_device"))
		self.chkout_reg_device_in = QtGui.QLineEdit(self.tab_2)
		self.chkout_reg_device_in.setGeometry(QtCore.QRect(150, 500, 741, 39))
		font = QtGui.QFont()
		font.setPointSize(20)
		self.chkout_reg_device_in.setFont(font)
		self.chkout_reg_device_in.setObjectName(_fromUtf8("chkout_reg_device_in"))
		self.chkout_reg_device_in.setValidator(self.validator)
		self.chkout_reg_serial = QtGui.QLabel(self.tab_2)
		self.chkout_reg_serial.setGeometry(QtCore.QRect(30, 560, 117, 33))
		font = QtGui.QFont()
		font.setPointSize(20)
		font.setBold(True)
		font.setWeight(75)
		self.chkout_reg_serial.setFont(font)
		self.chkout_reg_serial.setObjectName(_fromUtf8("chkout_reg_serial"))
		self.chkout_reg_serial_in = QtGui.QLineEdit(self.tab_2)
		self.chkout_reg_serial_in.setGeometry(QtCore.QRect(170, 560, 261, 39))
		font = QtGui.QFont()
		font.setPointSize(20)
		self.chkout_reg_serial_in.setFont(font)
		self.chkout_reg_serial_in.setObjectName(_fromUtf8("chkout_reg_serial_in"))
		self.chkout_reg_serial_in.setValidator(self.validator)
		self.chkout_reg_asset = QtGui.QLabel(self.tab_2)
		self.chkout_reg_asset.setGeometry(QtCore.QRect(450, 560, 171, 33))
		font = QtGui.QFont()
		font.setPointSize(20)
		font.setBold(True)
		font.setWeight(75)
		self.chkout_reg_asset.setFont(font)
		self.chkout_reg_asset.setObjectName(_fromUtf8("chkout_reg_asset"))
		self.chkout_reg_asset_in = QtGui.QLineEdit(self.tab_2)
		self.chkout_reg_asset_in.setGeometry(QtCore.QRect(640, 560, 251, 39))
		font = QtGui.QFont()
		font.setPointSize(20)
		self.chkout_reg_asset_in.setFont(font)
		self.chkout_reg_asset_in.setObjectName(_fromUtf8("chkout_reg_asset_in"))
		self.chkout_reg_asset_in.setValidator(self.validator)
		self.chkout_reg_descr = QtGui.QLabel(self.tab_2)
		self.chkout_reg_descr.setGeometry(QtCore.QRect(30, 620, 164, 33))
		font = QtGui.QFont()
		font.setPointSize(20)
		font.setBold(True)
		font.setWeight(75)
		self.chkout_reg_descr.setFont(font)
		self.chkout_reg_descr.setObjectName(_fromUtf8("chkout_reg_descr"))
		self.chkout_reg_descr_in = QtGui.QLineEdit(self.tab_2)
		self.chkout_reg_descr_in.setGeometry(QtCore.QRect(210, 620, 681, 39))
		font = QtGui.QFont()
		font.setPointSize(20)
		self.chkout_reg_descr_in.setFont(font)
		self.chkout_reg_descr_in.setObjectName(_fromUtf8("chkout_reg_descr_in"))
		self.chkout_reg_descr_in.setValidator(self.validator)
		self.chkout_reg_descr_in.setValidator(self.validator)
		self.chkout_reg_submit = QtGui.QPushButton(self.tab_2)
		self.chkout_reg_submit.setGeometry(QtCore.QRect(30, 670, 127, 37))
		self.chkout_reg_submit.setObjectName(_fromUtf8("chkout_reg_submit"))
		self.chkout_reg_submit.clicked.connect(self.reg_submit_chkout)
# End check out regular registered user ------------------------------------------^
		self.tabWidget.addTab(self.tab_2, _fromUtf8(""))
		self.dir_button = QtGui.QPushButton(self.centralwidget)
		self.dir_button.setGeometry(QtCore.QRect(10, 780, 186, 41))
		self.dir_button.setMinimumSize(QtCore.QSize(186, 41))
		font = QtGui.QFont()
		font.setPointSize(20)
		self.dir_button.setFont(font)
		self.dir_button.setObjectName(_fromUtf8("dir_button"))
		self.dir_button.clicked.connect(self.open_directory)
		self.close_button = QtGui.QPushButton(self.centralwidget)
		self.close_button.setGeometry(QtCore.QRect(210, 780, 144, 41))
		self.close_button.setMinimumSize(QtCore.QSize(144, 41))
		font = QtGui.QFont()
		font.setPointSize(20)
		self.close_button.setFont(font)
		self.close_button.setObjectName(_fromUtf8("close_button"))
		self.close_button.clicked.connect(QtCore.QCoreApplication.instance().quit)
		self.chkin_shi_img_3 = QtGui.QLabel(self.centralwidget)
		self.chkin_shi_img_3.setGeometry(QtCore.QRect(950, 50, 311, 191))
		self.chkin_shi_img_3.setMinimumSize(QtCore.QSize(311, 191))
		self.chkin_shi_img_3.setText(_fromUtf8(""))
		self.chkin_shi_img_3.setPixmap(QtGui.QPixmap(_fromUtf8("shilogo.jpg")))
		self.chkin_shi_img_3.setScaledContents(True)
		self.chkin_shi_img_3.setObjectName(_fromUtf8("chkin_shi_img_3"))
		self.support_lbl = QtGui.QLabel(self.centralwidget)
		self.support_lbl.setGeometry(QtCore.QRect(950, 310, 205, 19))
		self.support_lbl.setMinimumSize(QtCore.QSize(205, 19))
		font = QtGui.QFont()
		font.setPointSize(12)
		self.support_lbl.setFont(font)
		self.support_lbl.setObjectName(_fromUtf8("support_lbl"))
		self.version_lbl = QtGui.QLabel(self.centralwidget)
		self.version_lbl.setGeometry(QtCore.QRect(950, 270, 270, 19))
		self.version_lbl.setMinimumSize(QtCore.QSize(270, 19))
		font = QtGui.QFont()
		font.setPointSize(12)
		self.version_lbl.setFont(font)
		self.version_lbl.setObjectName(_fromUtf8("version_lbl"))
		self.tooltip_box = QtGui.QTextBrowser(self.centralwidget)
		self.tooltip_box.setGeometry(QtCore.QRect(950, 370, 321, 391))
		self.tooltip_box.setMinimumSize(QtCore.QSize(321, 391))
		font = QtGui.QFont()
		font.setPointSize(12)
		self.tooltip_box.setFont(font)
		self.tooltip_box.setObjectName(_fromUtf8("tooltip_box"))
		SHICheckIn.setCentralWidget(self.centralwidget)
		self.menubar = QtGui.QMenuBar(SHICheckIn)
		self.menubar.setGeometry(QtCore.QRect(0, 0, 1291, 21))
		self.menubar.setObjectName(_fromUtf8("menubar"))
		SHICheckIn.setMenuBar(self.menubar)
		self.statusbar = QtGui.QStatusBar(SHICheckIn)
		self.statusbar.setObjectName(_fromUtf8("statusbar"))
		SHICheckIn.setStatusBar(self.statusbar)

		self.retranslateUi(SHICheckIn)
		self.tabWidget.setCurrentIndex(0)
		QtCore.QMetaObject.connectSlotsByName(SHICheckIn)

	def retranslateUi(self, SHICheckIn):
		SHICheckIn.setWindowTitle(_translate("SHICheckIn", "SHICheckIn", None))
		self.chkin_new_title.setText(_translate("SHICheckIn", "CHECK IN NEW VISITOR/EMPLOYEE", None))
		self.chkin_reg_title.setText(_translate("SHICheckIn", "CHECK IN FREQUENT VISITOR/EMPLOYEE", None))
		self.chkin_new_name.setText(_translate("SHICheckIn", "Name:", None))
		self.chkin_new_device.setText(_translate("SHICheckIn", "Device:", None))
		self.chkin_new_serial.setText(_translate("SHICheckIn", "Serial #:", None))
		self.chkin_new_descr.setText(_translate("SHICheckIn", "Description:", None))
		self.chkin_new_asset.setText(_translate("SHICheckIn", "Asset Tag #:", None))
		self.chkin_drpmn_device.setItemText(0, _translate("SHICheckIn", "HP Laptop", None))
		self.chkin_drpmn_device.setItemText(1, _translate("SHICheckIn", "Dell Laptop", None))
		self.chkin_drpmn_device.setItemText(2, _translate("SHICheckIn", "Toshiba Laptop", None))
		self.chkin_drpmn_device.setItemText(3, _translate("SHICheckIn", "Lenovo Laptop", None))
		self.chkin_drpmn_device.setItemText(4, _translate("SHICheckIn", "Apple MacBook", None))
		self.chkin_drpmn_device.setItemText(5, _translate("SHICheckIn", "Samsung Tablet", None))
		self.chkin_drpmn_device.setItemText(6, _translate("SHICheckIn", "Microsoft Surface", None))
		self.chkin_drpmn_device.setItemText(7, _translate("SHICheckIn", "iPad", None))
		self.chkin_drpmn_device.setItemText(8, _translate("SHICheckIn", "iPad Mini", None))
		self.chkin_drpmn_device.setItemText(9, _translate("SHICheckIn", "USB Charger", None))
		self.chkin_drpmn_device.setItemText(10, _translate("SHICheckIn", "Not listed (see description)", None))
		self.chkin_reg_descr.setText(_translate("SHICheckIn", "Description:", None))
		self.chkin_reg_asset.setText(_translate("SHICheckIn", "Asset Tag #:", None))
		self.chkin_reg_device.setText(_translate("SHICheckIn", "Device:", None))
		self.chkin_reg_serial.setText(_translate("SHICheckIn", "Serial #:", None))
		self.chkin_reg_name.setText(_translate("SHICheckIn", "Name:", None))
		self.chkin_drpmn_name.setItemText(0, _translate("SHICheckIn", "Abdellah Maarouf", None))
		self.chkin_drpmn_name.setItemText(1, _translate("SHICheckIn", "Abdul Kargbo", None))
		self.chkin_drpmn_name.setItemText(2, _translate("SHICheckIn", "Ali Alloo", None))
		self.chkin_drpmn_name.setItemText(3, _translate("SHICheckIn", "Andrew Racz", None))
		self.chkin_drpmn_name.setItemText(4, _translate("SHICheckIn", "Brian Covela", None))
		self.chkin_drpmn_name.setItemText(5, _translate("SHICheckIn", "Bryan O'Neill", None))
		self.chkin_drpmn_name.setItemText(6, _translate("SHICheckIn", "Carl Anderson", None))
		self.chkin_drpmn_name.setItemText(7, _translate("SHICheckIn", "Carolyne Eustice", None))
		self.chkin_drpmn_name.setItemText(8, _translate("SHICheckIn", "Chris Sabella", None))
		self.chkin_drpmn_name.setItemText(9, _translate("SHICheckIn", "Christie Anderson", None))
		self.chkin_drpmn_name.setItemText(10, _translate("SHICheckIn", "Chris Sullo", None))
		self.chkin_drpmn_name.setItemText(11, _translate("SHICheckIn", "Curtis Booker", None))
		self.chkin_drpmn_name.setItemText(12, _translate("SHICheckIn", "Damian Latourette", None))
		self.chkin_drpmn_name.setItemText(13, _translate("SHICheckIn", "Daniel Carreira", None))
		self.chkin_drpmn_name.setItemText(14, _translate("SHICheckIn", "David Gerson", None))
		self.chkin_drpmn_name.setItemText(15, _translate("SHICheckIn", "Edward Nunez", None))
		self.chkin_drpmn_name.setItemText(16, _translate("SHICheckIn", "Eric Penderson", None))
		self.chkin_drpmn_name.setItemText(17, _translate("SHICheckIn", "Eric Severence", None))
		self.chkin_drpmn_name.setItemText(18, _translate("SHICheckIn", "Faisal Mohammad", None))
		self.chkin_drpmn_name.setItemText(19, _translate("SHICheckIn", "Felipa Cousens", None))
		self.chkin_drpmn_name.setItemText(20, _translate("SHICheckIn", "Hank Tullis", None))
		self.chkin_drpmn_name.setItemText(21, _translate("SHICheckIn", "Hector Rivera", None))
		self.chkin_drpmn_name.setItemText(22, _translate("SHICheckIn", "Hunn Ching Liao", None))
		self.chkin_drpmn_name.setItemText(23, _translate("SHICheckIn", "James Dodge", None))
		self.chkin_drpmn_name.setItemText(24, _translate("SHICheckIn", "Jason Folmar", None))
		self.chkin_drpmn_name.setItemText(25, _translate("SHICheckIn", "John Giftus", None))
		self.chkin_drpmn_name.setItemText(26, _translate("SHICheckIn", "John Popovich", None))
		self.chkin_drpmn_name.setItemText(27, _translate("SHICheckIn", "Jose Lopez", None))
		self.chkin_drpmn_name.setItemText(28, _translate("SHICheckIn", "Josue Cardona", None))
		self.chkin_drpmn_name.setItemText(29, _translate("SHICheckIn", "Keith K", None))
		self.chkin_drpmn_name.setItemText(30, _translate("SHICheckIn", "Keith Walker", None))
		self.chkin_drpmn_name.setItemText(31, _translate("SHICheckIn", "Kendell Lucas", None))
		self.chkin_drpmn_name.setItemText(32, _translate("SHICheckIn", "Kenny Hutchinson", None))
		self.chkin_drpmn_name.setItemText(33, _translate("SHICheckIn", "Kristy Talorico", None))
		self.chkin_drpmn_name.setItemText(34, _translate("SHICheckIn", "Lee Seaman", None))
		self.chkin_drpmn_name.setItemText(35, _translate("SHICheckIn", "Mark Mucciarone", None))
		self.chkin_drpmn_name.setItemText(36, _translate("SHICheckIn", "Mark Van Kleef", None))
		self.chkin_drpmn_name.setItemText(37, _translate("SHICheckIn", "Michael Scott", None))
		self.chkin_drpmn_name.setItemText(38, _translate("SHICheckIn", "Mike Finley", None))
		self.chkin_drpmn_name.setItemText(39, _translate("SHICheckIn", "Mike Milano", None))
		self.chkin_drpmn_name.setItemText(40, _translate("SHICheckIn", "Nicole Dejesus", None))
		self.chkin_drpmn_name.setItemText(41, _translate("SHICheckIn", "Nicholas Prociuk", None))
		self.chkin_drpmn_name.setItemText(42, _translate("SHICheckIn", "Nihad Issa", None))
		self.chkin_drpmn_name.setItemText(43, _translate("SHICheckIn", "Oscar Vartanian", None))
		self.chkin_drpmn_name.setItemText(44, _translate("SHICheckIn", "Paul Brew", None))
		self.chkin_drpmn_name.setItemText(45, _translate("SHICheckIn", "Paul Coffey", None))
		self.chkin_drpmn_name.setItemText(46, _translate("SHICheckIn", "Peter Zhu", None))
		self.chkin_drpmn_name.setItemText(47, _translate("SHICheckIn", "Rhina Cardona", None))
		self.chkin_drpmn_name.setItemText(48, _translate("SHICheckIn", "Rick Karp", None))
		self.chkin_drpmn_name.setItemText(49, _translate("SHICheckIn", "Rob Harrison", None))
		self.chkin_drpmn_name.setItemText(50, _translate("SHICheckIn", "Rohan Grandeson", None))
		self.chkin_drpmn_name.setItemText(51, _translate("SHICheckIn", "Ryan Espiritu", None))
		self.chkin_drpmn_name.setItemText(52, _translate("SHICheckIn", "Scott Lane", None))
		self.chkin_drpmn_name.setItemText(53, _translate("SHICheckIn", "Sean Larson", None))
		self.chkin_drpmn_name.setItemText(54, _translate("SHICheckIn", "Shawn Sabino", None))
		self.chkin_drpmn_name.setItemText(55, _translate("SHICheckIn", "Steve Alt", None))
		self.chkin_drpmn_name.setItemText(56, _translate("SHICheckIn", "Thomas O. Dell", None))
		self.chkin_drpmn_name.setItemText(57, _translate("SHICheckIn", "Tishonda Carson", None))
		self.chkin_drpmn_name.setItemText(58, _translate("SHICheckIn", "Tom Mililli", None))
		self.chkin_drpmn_name.setItemText(59, _translate("SHICheckIn", "William Morris", None))
		self.chkin_drpmn_name.setItemText(60, _translate("SHICheckIn", "Yomi Idris", None))
		self.chkin_drpmn_name.setItemText(61, _translate("SHICheckIn", "Yurity Stus", None))
		self.chkin_new_submit.setText(_translate("SHICheckIn", "Submit", None))
		self.chkin_reg_submit.setText(_translate("SHICheckIn", "Submit", None))
		self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("SHICheckIn", "Check In", None))
		self.chkout_reg_device.setText(_translate("SHICheckIn", "Device:", None))
		self.chkout_reg_descr.setText(_translate("SHICheckIn", "Description:", None))
		self.chkout_drpmn_name.setItemText(0, _translate("SHICheckIn", "Abdellah Maarouf", None))
		self.chkout_drpmn_name.setItemText(1, _translate("SHICheckIn", "Abdul Kargbo", None))
		self.chkout_drpmn_name.setItemText(2, _translate("SHICheckIn", "Ali Alloo", None))
		self.chkout_drpmn_name.setItemText(3, _translate("SHICheckIn", "Andrew Racz", None))
		self.chkout_drpmn_name.setItemText(4, _translate("SHICheckIn", "Brian Covela", None))
		self.chkout_drpmn_name.setItemText(5, _translate("SHICheckIn", "Bryan O'Neill", None))
		self.chkout_drpmn_name.setItemText(6, _translate("SHICheckIn", "Carl Anderson", None))
		self.chkout_drpmn_name.setItemText(7, _translate("SHICheckIn", "Carolyne Eustice", None))
		self.chkout_drpmn_name.setItemText(8, _translate("SHICheckIn", "Chris Sabella", None))
		self.chkout_drpmn_name.setItemText(9, _translate("SHICheckIn", "Christie Anderson", None))
		self.chkout_drpmn_name.setItemText(10, _translate("SHICheckIn", "Chris Sullo", None))
		self.chkout_drpmn_name.setItemText(11, _translate("SHICheckIn", "Curtis Booker", None))
		self.chkout_drpmn_name.setItemText(12, _translate("SHICheckIn", "Damian Latourette", None))
		self.chkout_drpmn_name.setItemText(13, _translate("SHICheckIn", "Daniel Carreira", None))
		self.chkout_drpmn_name.setItemText(14, _translate("SHICheckIn", "David Gerson", None))
		self.chkout_drpmn_name.setItemText(15, _translate("SHICheckIn", "Edward Nunez", None))
		self.chkout_drpmn_name.setItemText(16, _translate("SHICheckIn", "Eric Penderson", None))
		self.chkout_drpmn_name.setItemText(17, _translate("SHICheckIn", "Eric Severence", None))
		self.chkout_drpmn_name.setItemText(18, _translate("SHICheckIn", "Faisal Mohammad", None))
		self.chkout_drpmn_name.setItemText(19, _translate("SHICheckIn", "Felipa Cousens", None))
		self.chkout_drpmn_name.setItemText(20, _translate("SHICheckIn", "Hank Tullis", None))
		self.chkout_drpmn_name.setItemText(21, _translate("SHICheckIn", "Hector Rivera", None))
		self.chkout_drpmn_name.setItemText(22, _translate("SHICheckIn", "Hunn Ching Liao", None))
		self.chkout_drpmn_name.setItemText(23, _translate("SHICheckIn", "James Dodge", None))
		self.chkout_drpmn_name.setItemText(24, _translate("SHICheckIn", "Jason Folmar", None))
		self.chkout_drpmn_name.setItemText(25, _translate("SHICheckIn", "John Giftus", None))
		self.chkout_drpmn_name.setItemText(26, _translate("SHICheckIn", "John Popovich", None))
		self.chkout_drpmn_name.setItemText(27, _translate("SHICheckIn", "Jose Lopez", None))
		self.chkout_drpmn_name.setItemText(28, _translate("SHICheckIn", "Josue Cardona", None))
		self.chkout_drpmn_name.setItemText(29, _translate("SHICheckIn", "Keith K", None))
		self.chkout_drpmn_name.setItemText(30, _translate("SHICheckIn", "Keith Walker", None))
		self.chkout_drpmn_name.setItemText(31, _translate("SHICheckIn", "Kendell Lucas", None))
		self.chkout_drpmn_name.setItemText(32, _translate("SHICheckIn", "Kenny Hutchinson", None))
		self.chkout_drpmn_name.setItemText(33, _translate("SHICheckIn", "Kristy Talorico", None))
		self.chkout_drpmn_name.setItemText(34, _translate("SHICheckIn", "Lee Seaman", None))
		self.chkout_drpmn_name.setItemText(35, _translate("SHICheckIn", "Mark Mucciarone", None))
		self.chkout_drpmn_name.setItemText(36, _translate("SHICheckIn", "Mark Van Kleef", None))
		self.chkout_drpmn_name.setItemText(37, _translate("SHICheckIn", "Michael Scott", None))
		self.chkout_drpmn_name.setItemText(38, _translate("SHICheckIn", "Mike Finley", None))
		self.chkout_drpmn_name.setItemText(39, _translate("SHICheckIn", "Mike Milano", None))
		self.chkout_drpmn_name.setItemText(40, _translate("SHICheckIn", "Nicole Dejesus", None))
		self.chkout_drpmn_name.setItemText(41, _translate("SHICheckIn", "Nicholas Prociuk", None))
		self.chkout_drpmn_name.setItemText(42, _translate("SHICheckIn", "Nihad Issa", None))
		self.chkout_drpmn_name.setItemText(43, _translate("SHICheckIn", "Oscar Vartanian", None))
		self.chkout_drpmn_name.setItemText(44, _translate("SHICheckIn", "Paul Brew", None))
		self.chkout_drpmn_name.setItemText(45, _translate("SHICheckIn", "Paul Coffey", None))
		self.chkout_drpmn_name.setItemText(46, _translate("SHICheckIn", "Peter Zhu", None))
		self.chkout_drpmn_name.setItemText(47, _translate("SHICheckIn", "Rhina Cardona", None))
		self.chkout_drpmn_name.setItemText(48, _translate("SHICheckIn", "Rick Karp", None))
		self.chkout_drpmn_name.setItemText(49, _translate("SHICheckIn", "Rob Harrison", None))
		self.chkout_drpmn_name.setItemText(50, _translate("SHICheckIn", "Rohan Grandeson", None))
		self.chkout_drpmn_name.setItemText(51, _translate("SHICheckIn", "Ryan Espiritu", None))
		self.chkout_drpmn_name.setItemText(52, _translate("SHICheckIn", "Scott Lane", None))
		self.chkout_drpmn_name.setItemText(53, _translate("SHICheckIn", "Sean Larson", None))
		self.chkout_drpmn_name.setItemText(54, _translate("SHICheckIn", "Shawn Sabino", None))
		self.chkout_drpmn_name.setItemText(55, _translate("SHICheckIn", "Steve Alt", None))
		self.chkout_drpmn_name.setItemText(56, _translate("SHICheckIn", "Thomas O. Dell", None))
		self.chkout_drpmn_name.setItemText(57, _translate("SHICheckIn", "Tishonda Carson", None))
		self.chkout_drpmn_name.setItemText(58, _translate("SHICheckIn", "Tom Mililli", None))
		self.chkout_drpmn_name.setItemText(59, _translate("SHICheckIn", "William Morris", None))
		self.chkout_drpmn_name.setItemText(60, _translate("SHICheckIn", "Yomi Idris", None))
		self.chkout_drpmn_name.setItemText(61, _translate("SHICheckIn", "Yurity Stus", None))
		self.chkout_new_serial.setText(_translate("SHICheckIn", "Serial #:", None))
		self.chkout_reg_name.setText(_translate("SHICheckIn", "Name:", None))
		self.chkout_new_submit.setText(_translate("SHICheckIn", "Submit", None))
		self.chkout_reg_asset.setText(_translate("SHICheckIn", "Asset Tag #:", None))
		self.chkout_reg_submit.setText(_translate("SHICheckIn", "Submit", None))
		self.chkout_new_device.setText(_translate("SHICheckIn", "Device:", None))
		self.chkout_reg_serial.setText(_translate("SHICheckIn", "Serial #:", None))
		self.chkout_new_descr.setText(_translate("SHICheckIn", "Description:", None))
		self.chkout_new_name.setText(_translate("SHICheckIn", "Name:", None))
		self.chkout_new_asset.setText(_translate("SHICheckIn", "Asset Tag #:", None))
		self.chkout_new_title.setText(_translate("SHICheckIn", "CHECK OUT NEW VISITOR/EMPLOYEE", None))
		self.chkout_reg_title.setText(_translate("SHICheckIn", "CHECK OUT FREQUENT VISITOR/EMPLOYEE", None))
		self.chkout_drpmn_device.setItemText(0, _translate("SHICheckIn", "HP Laptop", None))
		self.chkout_drpmn_device.setItemText(1, _translate("SHICheckIn", "Dell Laptop", None))
		self.chkout_drpmn_device.setItemText(2, _translate("SHICheckIn", "Toshiba Laptop", None))
		self.chkout_drpmn_device.setItemText(3, _translate("SHICheckIn", "Lenovo Laptop", None))
		self.chkout_drpmn_device.setItemText(4, _translate("SHICheckIn", "Apple MacBook", None))
		self.chkout_drpmn_device.setItemText(5, _translate("SHICheckIn", "Samsung Tablet", None))
		self.chkout_drpmn_device.setItemText(6, _translate("SHICheckIn", "Microsoft Surface", None))
		self.chkout_drpmn_device.setItemText(7, _translate("SHICheckIn", "iPad", None))
		self.chkout_drpmn_device.setItemText(8, _translate("SHICheckIn", "iPad Mini", None))
		self.chkout_drpmn_device.setItemText(9, _translate("SHICheckIn", "USB Charger", None))
		self.chkout_drpmn_device.setItemText(10, _translate("SHICheckIn", "Not listed (see description)", None))
		self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("SHICheckIn", "Check Out", None))
		self.dir_button.setText(_translate("SHICheckIn", "Open Directory", None))
		self.close_button.setText(_translate("SHICheckIn", "Close", None))
		self.support_lbl.setText(_translate("SHICheckIn", "Support: ed_nunez@shi.com", None))
		self.version_lbl.setText(_translate("SHICheckIn", "SHI Security Check In v0.7.2 7/12/17", None))
		self.tooltip_box.setHtml(_translate("SHICheckIn", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
		"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
		"p, li { white-space: pre-wrap; }\n"
		"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:12pt; font-weight:400; font-style:normal;\">\n"
		"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600;\">Tool Tips - </span></p>\n"
		"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-weight:600;\"><br /></p>\n"
		"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:11pt; font-weight:600;\">New Check Ins:</span><span style=\" font-size:11pt;\"> For new check ins enter information and hit submit, the user will be added to the spread sheet for each item they check in. Every item they check in requires a new submission. </span></p>\n"
		"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:11pt;\"><br /></p>\n"
		"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:11pt; font-weight:600;\">Frequent Check Ins: </span><span style=\" font-size:11pt;\">For frequent check ins select a name out of the list and the fields will automatically be populated with the name\'s information. If the user has a new device or additional devices, the name can be selected but the device information has to be changed before clicking submit.</span></p>\n"
		"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:11pt;\"><br /></p>\n"
		"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:11pt; font-weight:600;\">Note: </span><span style=\" font-size:11pt;\">Any new check in that becomes frequent can be added easily by requesting support.  Send an e-mail with the check in name, device, serial or asset tag. </span></p></body></html>", None))

# Mandatory parameters for proper function of GUI
if __name__ == '__main__':
	app = QtGui.QApplication(sys.argv)
	window = Ui_SHICheckIn()
	window.show()
	sys.exit(app.exec_())