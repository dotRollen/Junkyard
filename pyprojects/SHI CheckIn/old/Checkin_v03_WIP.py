from PyQt4 import QtCore, QtGui
from checkin_inventory import *
from openpyxl import Workbook
from openpyxl.styles import PatternFill, Border, Side, Alignment, Protection, Font
import subprocess, os, platform, re, time, sys, openpyxl

save_path = os.path.expanduser('~\Documents\Security Checkin Archive')
save_filename = './SHI_Device_Log_' + time.strftime("%m-%d-%y") + '.xlsx'
active_workbook = os.path.join(save_path, save_filename)

if not os.path.exists(save_path):
    os.makedirs(save_path)

if os.path.isfile(save_path + save_filename):
	wb = openpyxl.load_workbook(active_workbook,)
	ws1 = wb.get_sheet_by_name('Log Archive')

else:
	wb = Workbook()
	ws1 = wb.active
	ws1.title = 'Log Archive'
	labels = ['Name', 'Device', 'Item Description', 'Item Serial #', 'Asset Tag #', 'IN', 'OUT', 'STAY IN']
	ws1.append(labels)
	cd = ws1.column_dimensions
	cd["A"].width = '18'
	cd["B"].width = '30'
	cd["C"].width = '40'
	cd["D"].width = '41'
	cd["E"].width = '15'
	cd["F"].width, cd["G"].width, cd["H"].width = '18', '18', '18'
	wb.save(filename = active_workbook)

try:
    _fromUtf8 = QtCore.QString.fromUtf8
except AttributeError:
    def _fromUtf8(s):
        return s

try:
    _encoding = QtGui.QApplication.UnicodeUTF8
    def _translate(context, text, disambig):
        return QtGui.QApplication.translate(context, text, disambig, _encoding)
except AttributeError:
    def _translate(context, text, disambig):
        return QtGui.QApplication.translate(context, text, disambig)

class Validator(QtGui.QValidator):
	def validate(self, string, pos):
		string.replace(0, string.count(), string.toUpper())
		return QtGui.QValidator.Acceptable, pos
		
class Ui_SHICheckIn(QtGui.QMainWindow):

	def __init__(self):
		QtGui.QMainWindow.__init__(self)
		self.setupUi(self)
		
	def open_directory(self):
		os.startfile(save_path)
		
# Check in new registered user ----------------------------------------------v
	def new_submit_chkin(self):
		chkin_new_name_text = str(self.chkin_new_name_in.displayText())
		chkin_new_device_text = str(self.chkin_drpmn_device.currentText())
		chkin_new_serial_text = str(self.chkin_new_serial_in.displayText())
		chkin_new_asset_text = str(self.chkin_new_asset_in.displayText())
		chkin_new_descr_text = str(self.chkin_new_descr_in.displayText())
		chkin_ndata = ( chkin_new_name_text, chkin_new_device_text, 
						chkin_new_descr_text, chkin_new_serial_text, 
						chkin_new_asset_text, time.strftime("%m/%d/%y %H:%M - %p") )
		matching_row_nbr = None
		for rowNum in range(2, ws1.max_row + 1 ):
			log_name = ws1.cell(row=rowNum,column=1).value
			if log_name == chkin_new_name_text:
				matching_row_nbr = rowNum
				break
		if matching_row_nbr is not None:
			ws1.cell(row=matching_row_nbr, column=6).value = str(time.strftime("%m/%d/%y %H:%M - %p"))
			wb.save(filename = active_workbook)
			QtGui.QMessageBox.about(self.centralwidget, 
									"Check In Updated", chkin_new_name_text 
									+ " has checked out " + chkin_new_device_text 
									+ " today. This device is now checked back in.")
		if len(chkin_new_name_text) < 1:
			QtGui.QMessageBox.about(self.centralwidget, "Oops! Incomplete!", "Please enter the name of the employee or visitor!")
		else:
			ws1.append(chkin_ndata)
			wb.save(filename = active_workbook)
			QtGui.QMessageBox.about(self.centralwidget, "Check In Succesful", 
									chkin_new_name_text + "'s " + chkin_new_device_text 
									+ " has been succesfully checked in")
		self.chkin_new_name_in.clear()
		self.chkin_drpmn_device.setCurrentIndex(-1)
		self.chkin_new_serial_in.clear()
		self.chkin_new_asset_in.clear()
		self.chkin_new_descr_in.clear()
# End check in new registered user -----------------------------------------------^
	
# Check in regular registered user -----------------------------------------------v
	def chkin_reg_autofill(self, currentIndex):
		if currentIndex >= -1: 
			self.chkin_reg_device_in.setText(var[currentIndex][0])
			self.chkin_reg_serial_in.setText(var[currentIndex][1])
			self.chkin_reg_asset_in.setText(var[currentIndex][2])
			self.chkin_reg_descr_in.setText(var[currentIndex][3])
			
	def reg_submit_chkin(self):
		chkin_reg_name_text = str(self.chkin_drpmn_name.currentText())
		chkin_reg_device_text = str(self.chkin_reg_device_in.displayText())
		chkin_reg_serial_text = str(self.chkin_reg_serial_in.displayText())
		chkin_reg_asset_text = str(self.chkin_reg_asset_in.displayText())
		chkin_reg_descr_text = str(self.chkin_reg_descr_in.displayText())
		chkin_rdata = ( chkin_reg_name_text, chkin_reg_device_text, chkin_reg_descr_text, 
						chkin_reg_serial_text, chkin_reg_asset_text, time.strftime("%m/%d/%y %H:%M - %p") )
		matching_row_nbr = None
		for rowNum in range(2, ws1.max_row + 1 ):
			log_name = ws1.cell(row=rowNum,column=1).value
			if log_name == chkin_reg_name_text:
				matching_row_nbr = rowNum
				break
		if matching_row_nbr is not None:
			ws1.cell(row=matching_row_nbr, column=6).value = str(time.strftime("%m/%d/%y %H:%M - %p"))
			wb.save(filename = active_workbook)
		else:
			ws1.append(chkin_rdata)
			wb.save(filename = active_workbook)
		self.chkin_drpmn_name.setCurrentIndex(-1)
		self.chkin_reg_device_in.clear()
		self.chkin_reg_serial_in.clear()
		self.chkin_reg_asset_in.clear()
		self.chkin_reg_descr_in.clear()
# End check in regular registered user -------------------------------------------^
	
# Check out new registered user --------------------------------------------------v
	def new_submit_chkout(self):
		chkout_new_name_text = str(self.chkout_new_name_in.displayText())
		chkout_new_device_text = str(self.chkout_drpmn_device.currentText())
		chkout_new_serial_text = str(self.chkout_new_serial_in.displayText())
		chkout_new_asset_text = str(self.chkout_new_asset_in.displayText())
		chkout_new_descr_text = str(self.chkout_new_descr_in.displayText())
		chkout_ndata = ( chkout_new_name_text, chkout_new_device_text, chkout_new_descr_text,
						chkout_new_serial_text, chkout_new_asset_text, '', time.strftime("%m/%d/%y %H:%M - %p"))
		matching_row_nbr = None
		for rowNum in range(2, ws1.max_row + 1 ):
			log_name = ws1.cell(row=rowNum,column=1).value
			if log_name == chkout_new_name_text:
				matching_row_nbr = rowNum
				break
		if matching_row_nbr is not None:
			ws1.cell(row=matching_row_nbr, column=7).value = str(time.strftime("%m/%d/%y %H:%M - %p"))
			wb.save(filename = active_workbook)
		else:
			ws1.append(chkout_ndata)
			wb.save(filename = active_workbook)
		self.chkout_new_name_in.clear()
		self.chkout_drpmn_device.setCurrentIndex(-1)
		self.chkout_new_serial_in.clear()
		self.chkout_new_asset_in.clear()
		self.chkout_new_descr_in.clear()
# End check out new registered user ---------------------------------------------^
	
# Check out regular registered user ---------------------------------------------v
	def chkout_reg_autofill(self, currentIndex):
		if currentIndex >= -1: 
			self.chkout_reg_device_in.setText(var[currentIndex][0])
			self.chkout_reg_serial_in.setText(var[currentIndex][1])
			self.chkout_reg_asset_in.setText(var[currentIndex][2])
			self.chkout_reg_descr_in.setText(var[currentIndex][3])

	def reg_submit_chkout(self):
		chkout_reg_name_text = str(self.chkout_drpmn_name.currentText())
		chkout_reg_device_text = str(self.chkout_reg_device_in.displayText())
		chkout_reg_serial_text = str(self.chkout_reg_serial_in.displayText())
		chkout_reg_asset_text = str(self.chkout_reg_asset_in.displayText())
		chkout_reg_descr_text = str(self.chkout_reg_descr_in.displayText())
		chkout_rdata = ( chkout_reg_name_text, chkout_reg_device_text, chkout_reg_descr_text, 
						chkout_reg_serial_text, chkout_reg_asset_text, '', time.strftime("%m/%d/%y %H:%M - %p") )
		matching_row_nbr = None
		for rowNum in range(2, ws1.max_row + 1 ):
			log_name = ws1.cell(row=rowNum,column=1).value
			if log_name == chkout_reg_name_text:
				matching_row_nbr = rowNum
				break
		if matching_row_nbr is not None:
			ws1.cell(row=matching_row_nbr, column=7).value = str(time.strftime("%m/%d/%y %H:%M - %p"))
			wb.save(filename = active_workbook)
		else:
			ws1.append(chkout_rdata)
			wb.save(filename = active_workbook)
		self.chkout_drpmn_name.setCurrentIndex(-1)
		self.chkout_reg_device_in.clear()
		self.chkout_reg_serial_in.clear()
		self.chkout_reg_asset_in.clear()
		self.chkout_reg_descr_in.clear()
# End check out new registered user --------------------------------------------^
	
	def setupUi(self, SHICheckIn):
		SHICheckIn.setObjectName(_fromUtf8("SHICheckIn"))
		SHICheckIn.resize(1542, 967)
		self.centralwidget = QtGui.QWidget(SHICheckIn)
		self.centralwidget.setObjectName(_fromUtf8("centralwidget"))
		self.tabWidget = QtGui.QTabWidget(self.centralwidget)
		self.tabWidget.setGeometry(QtCore.QRect(9, 9, 1511, 681))
		self.tabWidget.setMinimumSize(QtCore.QSize(1511, 681))
		self.tabWidget.setMaximumSize(QtCore.QSize(1511, 681))
		font = QtGui.QFont()
		font.setPointSize(24)
		self.tabWidget.setFont(font)
		self.tabWidget.setObjectName(_fromUtf8("tabWidget"))
		self.CheckIn = QtGui.QWidget()
		self.CheckIn.setObjectName(_fromUtf8("CheckIn"))
# Check in new registered user ------------------------------------------------v
		self.chkin_new_title = QtGui.QLabel(self.CheckIn)
		self.chkin_new_title.setGeometry(QtCore.QRect(10, 10, 481, 41))
		self.chkin_new_title.setMinimumSize(QtCore.QSize(481, 41))
		self.chkin_new_title.setMaximumSize(QtCore.QSize(481, 41))
		self.chkin_new_title.setObjectName(_fromUtf8("chkin_new_title"))
		self.chkin_new_name = QtGui.QLabel(self.CheckIn)
		self.chkin_new_name.setGeometry(QtCore.QRect(10, 60, 111, 41))
		self.chkin_new_name.setMinimumSize(QtCore.QSize(111, 41))
		self.chkin_new_name.setMaximumSize(QtCore.QSize(111, 41))
		self.chkin_new_name.setObjectName(_fromUtf8("chkin_new_name"))
		self.chkin_new_name_in = QtGui.QLineEdit(self.CheckIn)
		self.chkin_new_name_in.setGeometry(QtCore.QRect(120, 60, 1001, 41))
		self.chkin_new_name_in.setMinimumSize(QtCore.QSize(1001, 41))
		self.chkin_new_name_in.setMaximumSize(QtCore.QSize(1001, 41))
		self.chkin_new_name_in.setObjectName(_fromUtf8("chkin_new_name_in"))
		self.validator = Validator(self)
		self.chkin_new_name_in.setValidator(self.validator)
		self.chkin_new_descr = QtGui.QLabel(self.CheckIn)
		self.chkin_new_descr.setGeometry(QtCore.QRect(10, 210, 201, 41))
		self.chkin_new_descr.setMinimumSize(QtCore.QSize(201, 41))
		self.chkin_new_descr.setMaximumSize(QtCore.QSize(201, 41))
		font = QtGui.QFont()
		font.setPointSize(24)
		self.chkin_new_descr.setFont(font)
		self.chkin_new_descr.setObjectName(_fromUtf8("chkin_new_descr"))
		self.chkin_new_descr_in = QtGui.QLineEdit(self.CheckIn)
		self.chkin_new_descr_in.setGeometry(QtCore.QRect(210, 210, 911, 41))
		self.chkin_new_descr_in.setMinimumSize(QtCore.QSize(911, 41))
		self.chkin_new_descr_in.setMaximumSize(QtCore.QSize(911, 41))
		self.chkin_new_descr_in.setObjectName(_fromUtf8("chkin_new_descr_in"))
		self.chkin_new_descr_in.setValidator(self.validator)
		self.chkin_new_serial = QtGui.QLabel(self.CheckIn)
		self.chkin_new_serial.setGeometry(QtCore.QRect(10, 160, 141, 41))
		self.chkin_new_serial.setMinimumSize(QtCore.QSize(141, 41))
		self.chkin_new_serial.setMaximumSize(QtCore.QSize(141, 41))
		self.chkin_new_serial.setObjectName(_fromUtf8("chkin_new_serial"))
		self.chkin_new_serial_in = QtGui.QLineEdit(self.CheckIn)
		self.chkin_new_serial_in.setGeometry(QtCore.QRect(150, 160, 351, 41))
		self.chkin_new_serial_in.setMinimumSize(QtCore.QSize(351, 41))
		self.chkin_new_serial_in.setMaximumSize(QtCore.QSize(351, 41))
		self.chkin_new_serial_in.setObjectName(_fromUtf8("chkin_new_serial_in"))
		self.chkin_new_serial_in.setValidator(self.validator)
		self.chkin_new_asset = QtGui.QLabel(self.CheckIn)
		self.chkin_new_asset.setGeometry(QtCore.QRect(510, 160, 201, 41))
		self.chkin_new_asset.setMinimumSize(QtCore.QSize(201, 41))
		self.chkin_new_asset.setMaximumSize(QtCore.QSize(201, 41))
		self.chkin_new_asset.setObjectName(_fromUtf8("chkin_new_asset"))
		self.chkin_new_asset_in = QtGui.QLineEdit(self.CheckIn)
		self.chkin_new_asset_in.setGeometry(QtCore.QRect(710, 160, 411, 41))
		self.chkin_new_asset_in.setMinimumSize(QtCore.QSize(411, 41))
		self.chkin_new_asset_in.setMaximumSize(QtCore.QSize(411, 41))
		self.chkin_new_asset_in.setObjectName(_fromUtf8("chkin_new_asset_in"))
		self.chkin_new_asset_in.setValidator(self.validator)
		self.chkin_new_device = QtGui.QLabel(self.CheckIn)
		self.chkin_new_device.setGeometry(QtCore.QRect(10, 110, 121, 41))
		self.chkin_new_device.setMinimumSize(QtCore.QSize(121, 41))
		self.chkin_new_device.setMaximumSize(QtCore.QSize(121, 41))
		self.chkin_new_device.setObjectName(_fromUtf8("chkin_new_device"))
		self.chkin_drpmn_device = QtGui.QComboBox(self.CheckIn)
		self.chkin_drpmn_device.setGeometry(QtCore.QRect(140, 110, 421, 41))
		self.chkin_drpmn_device.setMinimumSize(QtCore.QSize(421, 41))
		self.chkin_drpmn_device.setMaximumSize(QtCore.QSize(421, 41))
		font = QtGui.QFont()
		font.setPointSize(24)
		self.chkin_drpmn_device.setFont(font)
		self.chkin_drpmn_device.setObjectName(_fromUtf8("chkin_drpmn_device"))
		self.chkin_drpmn_device.addItem(_fromUtf8(""))
		self.chkin_drpmn_device.addItem(_fromUtf8(""))
		self.chkin_drpmn_device.addItem(_fromUtf8(""))
		self.chkin_drpmn_device.addItem(_fromUtf8(""))
		self.chkin_drpmn_device.addItem(_fromUtf8(""))
		self.chkin_drpmn_device.addItem(_fromUtf8(""))
		self.chkin_drpmn_device.setCurrentIndex(-1)
		self.chkin_new_submit = QtGui.QPushButton(self.CheckIn)
		self.chkin_new_submit.setGeometry(QtCore.QRect(10, 260, 231, 51))
		self.chkin_new_submit.setMinimumSize(QtCore.QSize(231, 51))
		self.chkin_new_submit.setMaximumSize(QtCore.QSize(231, 51))
		font = QtGui.QFont()
		font.setPointSize(24)
		self.chkin_new_submit.setFont(font)
		self.chkin_new_submit.setObjectName(_fromUtf8("chkin_new_submit"))
		self.chkin_new_submit.clicked.connect(self.new_submit_chkin)
# End check in new registered user --------------------------------------------^
		self.chkin_divider = QtGui.QFrame(self.CheckIn)
		self.chkin_divider.setGeometry(QtCore.QRect(10, 310, 1111, 20))
		self.chkin_divider.setMinimumSize(QtCore.QSize(1111, 20))
		self.chkin_divider.setMaximumSize(QtCore.QSize(1111, 20))
		self.chkin_divider.setFrameShape(QtGui.QFrame.HLine)
		self.chkin_divider.setFrameShadow(QtGui.QFrame.Sunken)
		self.chkin_divider.setObjectName(_fromUtf8("chkin_divider"))
		self.chkin_shi_img = QtGui.QLabel(self.CheckIn)
		self.chkin_shi_img.setGeometry(QtCore.QRect(1130, 10, 371, 251))
		self.chkin_shi_img.setText(_fromUtf8(""))
		self.chkin_shi_img.setPixmap(QtGui.QPixmap(_fromUtf8("/SHI-Logo-RGB.jpg")))
		self.chkin_shi_img.setScaledContents(True)
		self.chkin_shi_img.setObjectName(_fromUtf8("chkin_shi_img"))
# Check in regular registered user -------------------------------------------v
		self.chkin_reg_title = QtGui.QLabel(self.CheckIn)
		self.chkin_reg_title.setGeometry(QtCore.QRect(10, 330, 611, 41))
		self.chkin_reg_title.setMinimumSize(QtCore.QSize(611, 41))
		self.chkin_reg_title.setMaximumSize(QtCore.QSize(611, 41))
		self.chkin_reg_title.setObjectName(_fromUtf8("chkin_reg_title"))
		self.chkin_reg_name = QtGui.QLabel(self.CheckIn)
		self.chkin_reg_name.setGeometry(QtCore.QRect(10, 370, 111, 41))
		self.chkin_reg_name.setMinimumSize(QtCore.QSize(111, 41))
		self.chkin_reg_name.setMaximumSize(QtCore.QSize(111, 41))
		self.chkin_reg_name.setObjectName(_fromUtf8("chkin_reg_name"))
		self.chkin_drpmn_name = QtGui.QComboBox(self.CheckIn)
		self.chkin_drpmn_name.setGeometry(QtCore.QRect(120, 370, 411, 41))
		self.chkin_drpmn_name.setMinimumSize(QtCore.QSize(411, 41))
		self.chkin_drpmn_name.setMaximumSize(QtCore.QSize(411, 41))
		font = QtGui.QFont()
		font.setPointSize(24)
		self.chkin_drpmn_name.setFont(font)
		self.chkin_drpmn_name.setObjectName(_fromUtf8("chkin_drpmn_name"))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.addItem(_fromUtf8(""))
		self.chkin_drpmn_name.setCurrentIndex(-1)
		self.connect(self.chkin_drpmn_name, QtCore.SIGNAL('currentIndexChanged(int)'), self.chkin_reg_autofill)
		self.chkin_reg_device = QtGui.QLabel(self.CheckIn)
		self.chkin_reg_device.setGeometry(QtCore.QRect(10, 420, 141, 41))
		self.chkin_reg_device.setMinimumSize(QtCore.QSize(141, 41))
		self.chkin_reg_device.setMaximumSize(QtCore.QSize(141, 41))
		self.chkin_reg_device.setObjectName(_fromUtf8("chkin_reg_device"))
		self.chkin_reg_device_in = QtGui.QLineEdit(self.CheckIn)
		self.chkin_reg_device_in.setGeometry(QtCore.QRect(140, 420, 981, 41))
		self.chkin_reg_device_in.setMinimumSize(QtCore.QSize(981, 41))
		self.chkin_reg_device_in.setMaximumSize(QtCore.QSize(981, 41))
		self.chkin_reg_device_in.setObjectName(_fromUtf8("chkin_reg_device_in"))
		self.chkin_reg_device_in.setValidator(self.validator)
		self.chkin_reg_descr = QtGui.QLabel(self.CheckIn)
		self.chkin_reg_descr.setGeometry(QtCore.QRect(10, 520, 191, 41))
		self.chkin_reg_descr.setMinimumSize(QtCore.QSize(191, 41))
		self.chkin_reg_descr.setMaximumSize(QtCore.QSize(191, 41))
		self.chkin_reg_descr.setObjectName(_fromUtf8("chkin_reg_descr"))
		self.chkin_reg_descr_in = QtGui.QLineEdit(self.CheckIn)
		self.chkin_reg_descr_in.setGeometry(QtCore.QRect(210, 520, 911, 41))
		self.chkin_reg_descr_in.setMinimumSize(QtCore.QSize(911, 41))
		self.chkin_reg_descr_in.setMaximumSize(QtCore.QSize(911, 41))
		font = QtGui.QFont()
		font.setPointSize(24)
		font.setBold(False)
		font.setWeight(50)
		self.chkin_reg_descr_in.setFont(font)
		self.chkin_reg_descr_in.setText(_fromUtf8(""))
		self.chkin_reg_descr_in.setObjectName(_fromUtf8("chkin_reg_descr_in"))
		self.chkin_reg_descr_in.setValidator(self.validator)
		self.chkin_reg_asset = QtGui.QLabel(self.CheckIn)
		self.chkin_reg_asset.setGeometry(QtCore.QRect(510, 470, 201, 41))
		self.chkin_reg_asset.setMinimumSize(QtCore.QSize(201, 41))
		self.chkin_reg_asset.setMaximumSize(QtCore.QSize(201, 41))
		self.chkin_reg_asset.setObjectName(_fromUtf8("chkin_reg_asset"))
		self.chkin_reg_asset_in = QtGui.QLineEdit(self.CheckIn)
		self.chkin_reg_asset_in.setGeometry(QtCore.QRect(710, 470, 411, 41))
		self.chkin_reg_asset_in.setMinimumSize(QtCore.QSize(411, 41))
		self.chkin_reg_asset_in.setMaximumSize(QtCore.QSize(411, 41))
		font = QtGui.QFont()
		font.setPointSize(24)
		self.chkin_reg_asset_in.setFont(font)
		self.chkin_reg_asset_in.setObjectName(_fromUtf8("chkin_reg_asset_in"))
		self.chkin_reg_asset_in.setValidator(self.validator)
		self.chkin_reg_serial = QtGui.QLabel(self.CheckIn)
		self.chkin_reg_serial.setGeometry(QtCore.QRect(10, 470, 141, 41))
		self.chkin_reg_serial.setMinimumSize(QtCore.QSize(141, 41))
		self.chkin_reg_serial.setMaximumSize(QtCore.QSize(141, 41))
		self.chkin_reg_serial.setObjectName(_fromUtf8("chkin_reg_serial"))
		self.chkin_reg_serial_in = QtGui.QLineEdit(self.CheckIn)
		self.chkin_reg_serial_in.setGeometry(QtCore.QRect(150, 470, 351, 41))
		self.chkin_reg_serial_in.setMinimumSize(QtCore.QSize(351, 41))
		self.chkin_reg_serial_in.setMaximumSize(QtCore.QSize(351, 41))
		font = QtGui.QFont()
		font.setPointSize(24)
		self.chkin_reg_serial_in.setFont(font)
		self.chkin_reg_serial_in.setObjectName(_fromUtf8("chkin_reg_serial_in"))
		self.chkin_reg_serial_in.setValidator(self.validator)
		self.chkin_reg_submit = QtGui.QPushButton(self.CheckIn)
		self.chkin_reg_submit.setGeometry(QtCore.QRect(10, 570, 231, 51))
		self.chkin_reg_submit.setMinimumSize(QtCore.QSize(231, 51))
		self.chkin_reg_submit.setMaximumSize(QtCore.QSize(231, 51))
		font = QtGui.QFont()
		font.setPointSize(24)
		self.chkin_reg_submit.setFont(font)
		self.chkin_reg_submit.setObjectName(_fromUtf8("chkin_reg_submit"))
		self.chkin_reg_submit.clicked.connect(self.reg_submit_chkin)
# End check in regular registered user ------------------------------------------^
		self.chkin_disclaimer = QtGui.QTextBrowser(self.CheckIn)
		self.chkin_disclaimer.setGeometry(QtCore.QRect(1130, 440, 371, 181))
		self.chkin_disclaimer.setObjectName(_fromUtf8("chkin_disclaimer"))
		self.tabWidget.addTab(self.CheckIn, _fromUtf8(""))
		self.CheckOut = QtGui.QWidget()
		self.CheckOut.setObjectName(_fromUtf8("CheckOut"))
		self.chkout_shi_img = QtGui.QLabel(self.CheckOut)
		self.chkout_shi_img.setGeometry(QtCore.QRect(1130, 10, 371, 251))
		self.chkout_shi_img.setText(_fromUtf8(""))
		self.chkout_shi_img.setPixmap(QtGui.QPixmap(_fromUtf8("/SHI-Logo-RGB.jpg")))
		self.chkout_shi_img.setScaledContents(True)
		self.chkout_shi_img.setObjectName(_fromUtf8("chkout_shi_img"))
# Check out new registered user ------------------------------------------v
		self.chkout_new_title = QtGui.QLabel(self.CheckOut)
		self.chkout_new_title.setGeometry(QtCore.QRect(10, 10, 481, 41))
		self.chkout_new_title.setMinimumSize(QtCore.QSize(481, 41))
		self.chkout_new_title.setMaximumSize(QtCore.QSize(481, 41))
		self.chkout_new_title.setObjectName(_fromUtf8("chkout_new_title"))
		self.chkout_new_name = QtGui.QLabel(self.CheckOut)
		self.chkout_new_name.setGeometry(QtCore.QRect(10, 60, 111, 41))
		self.chkout_new_name.setMinimumSize(QtCore.QSize(111, 41))
		self.chkout_new_name.setMaximumSize(QtCore.QSize(111, 41))
		self.chkout_new_name.setObjectName(_fromUtf8("chkout_new_name"))
		self.chkout_new_name_in = QtGui.QLineEdit(self.CheckOut)
		self.chkout_new_name_in.setGeometry(QtCore.QRect(120, 59, 1001, 41))
		self.chkout_new_name_in.setMinimumSize(QtCore.QSize(1001, 41))
		self.chkout_new_name_in.setMaximumSize(QtCore.QSize(1001, 41))
		self.chkout_new_name_in.setObjectName(_fromUtf8("chkout_new_name_in"))
		self.chkout_new_name_in.setValidator(self.validator)
		self.chkout_new_device = QtGui.QLabel(self.CheckOut)
		self.chkout_new_device.setGeometry(QtCore.QRect(10, 110, 121, 41))
		self.chkout_new_device.setMinimumSize(QtCore.QSize(121, 41))
		self.chkout_new_device.setMaximumSize(QtCore.QSize(121, 41))
		self.chkout_new_device.setObjectName(_fromUtf8("chkout_new_device"))
		self.chkout_drpmn_device = QtGui.QComboBox(self.CheckOut)
		self.chkout_drpmn_device.setGeometry(QtCore.QRect(140, 110, 421, 41))
		self.chkout_drpmn_device.setMinimumSize(QtCore.QSize(421, 41))
		self.chkout_drpmn_device.setMaximumSize(QtCore.QSize(421, 41))
		self.chkout_drpmn_device.setObjectName(_fromUtf8("chkout_drpmn_device"))
		self.chkout_drpmn_device.addItem(_fromUtf8(""))
		self.chkout_drpmn_device.addItem(_fromUtf8(""))
		self.chkout_drpmn_device.addItem(_fromUtf8(""))
		self.chkout_drpmn_device.addItem(_fromUtf8(""))
		self.chkout_drpmn_device.addItem(_fromUtf8(""))
		self.chkout_drpmn_device.addItem(_fromUtf8(""))
		self.chkout_drpmn_device.addItem(_fromUtf8(""))
		self.chkout_drpmn_device.addItem(_fromUtf8(""))
		self.chkout_drpmn_device.addItem(_fromUtf8(""))
		self.chkout_drpmn_device.addItem(_fromUtf8(""))
		self.chkout_drpmn_device.addItem(_fromUtf8(""))
		self.chkout_drpmn_device.setCurrentIndex(-1)
		self.chkout_new_serial = QtGui.QLabel(self.CheckOut)
		self.chkout_new_serial.setGeometry(QtCore.QRect(10, 160, 141, 41))
		self.chkout_new_serial.setMinimumSize(QtCore.QSize(141, 41))
		self.chkout_new_serial.setMaximumSize(QtCore.QSize(141, 41))
		self.chkout_new_serial.setObjectName(_fromUtf8("chkout_new_serial"))
		self.chkout_new_serial_in = QtGui.QLineEdit(self.CheckOut)
		self.chkout_new_serial_in.setGeometry(QtCore.QRect(150, 160, 351, 41))
		self.chkout_new_serial_in.setMinimumSize(QtCore.QSize(351, 41))
		self.chkout_new_serial_in.setMaximumSize(QtCore.QSize(351, 41))
		self.chkout_new_serial_in.setObjectName(_fromUtf8("chkout_new_serial_in"))
		self.chkout_new_serial_in.setValidator(self.validator)
		self.chkout_new_asset = QtGui.QLabel(self.CheckOut)
		self.chkout_new_asset.setGeometry(QtCore.QRect(510, 160, 201, 41))
		self.chkout_new_asset.setMinimumSize(QtCore.QSize(201, 41))
		self.chkout_new_asset.setMaximumSize(QtCore.QSize(201, 41))
		self.chkout_new_asset.setObjectName(_fromUtf8("chkout_new_asset"))
		self.chkout_new_asset_in = QtGui.QLineEdit(self.CheckOut)
		self.chkout_new_asset_in.setGeometry(QtCore.QRect(710, 159, 411, 41))
		self.chkout_new_asset_in.setMinimumSize(QtCore.QSize(411, 41))
		self.chkout_new_asset_in.setMaximumSize(QtCore.QSize(411, 41))
		self.chkout_new_asset_in.setObjectName(_fromUtf8("chkout_new_asset_in"))
		self.chkout_new_asset_in.setValidator(self.validator)
		self.chkout_new_descr = QtGui.QLabel(self.CheckOut)
		self.chkout_new_descr.setGeometry(QtCore.QRect(10, 210, 201, 41))
		self.chkout_new_descr.setMinimumSize(QtCore.QSize(201, 41))
		self.chkout_new_descr.setMaximumSize(QtCore.QSize(201, 41))
		self.chkout_new_descr.setObjectName(_fromUtf8("chkout_new_descr"))
		self.chkout_new_descr_in = QtGui.QLineEdit(self.CheckOut)
		self.chkout_new_descr_in.setGeometry(QtCore.QRect(210, 210, 911, 41))
		self.chkout_new_descr_in.setMinimumSize(QtCore.QSize(911, 41))
		self.chkout_new_descr_in.setMaximumSize(QtCore.QSize(911, 41))
		self.chkout_new_descr_in.setObjectName(_fromUtf8("chkout_new_descr_in"))
		self.chkout_new_descr_in.setValidator(self.validator)
		self.chkout_new_submit = QtGui.QPushButton(self.CheckOut)
		self.chkout_new_submit.setGeometry(QtCore.QRect(10, 260, 231, 51))
		self.chkout_new_submit.setMinimumSize(QtCore.QSize(231, 51))
		self.chkout_new_submit.setMaximumSize(QtCore.QSize(231, 51))
		self.chkout_new_submit.setObjectName(_fromUtf8("chkout_new_submit"))
		self.chkout_new_submit.clicked.connect(self.new_submit_chkout)
# End check out new registered user ------------------------------------------^
		self.chkout_divider = QtGui.QFrame(self.CheckOut)
		self.chkout_divider.setGeometry(QtCore.QRect(10, 310, 1111, 20))
		self.chkout_divider.setMinimumSize(QtCore.QSize(1111, 20))
		self.chkout_divider.setMaximumSize(QtCore.QSize(1111, 20))
		self.chkout_divider.setFrameShape(QtGui.QFrame.HLine)
		self.chkout_divider.setFrameShadow(QtGui.QFrame.Sunken)
		self.chkout_divider.setObjectName(_fromUtf8("chkout_divider"))
		self.chkout_disclaimer = QtGui.QTextBrowser(self.CheckOut)
		self.chkout_disclaimer.setGeometry(QtCore.QRect(1130, 440, 371, 181))
		self.chkout_disclaimer.setObjectName(_fromUtf8("chkout_disclaimer"))
# Check out regular registered user ------------------------------------------v
		self.chkout_reg_title = QtGui.QLabel(self.CheckOut)
		self.chkout_reg_title.setGeometry(QtCore.QRect(10, 330, 611, 41))
		self.chkout_reg_title.setMinimumSize(QtCore.QSize(611, 41))
		self.chkout_reg_title.setMaximumSize(QtCore.QSize(611, 41))
		self.chkout_reg_title.setObjectName(_fromUtf8("chkout_reg_title"))
		self.chkout_reg_name = QtGui.QLabel(self.CheckOut)
		self.chkout_reg_name.setGeometry(QtCore.QRect(10, 370, 111, 41))
		self.chkout_reg_name.setMinimumSize(QtCore.QSize(111, 41))
		self.chkout_reg_name.setMaximumSize(QtCore.QSize(111, 41))
		self.chkout_reg_name.setObjectName(_fromUtf8("chkout_reg_name"))
		self.chkout_drpmn_name = QtGui.QComboBox(self.CheckOut)
		self.chkout_drpmn_name.setGeometry(QtCore.QRect(120, 370, 411, 41))
		self.chkout_drpmn_name.setMinimumSize(QtCore.QSize(411, 41))
		self.chkout_drpmn_name.setMaximumSize(QtCore.QSize(411, 41))
		self.chkout_drpmn_name.setObjectName(_fromUtf8("chkout_drpmn_name"))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.addItem(_fromUtf8(""))
		self.chkout_drpmn_name.setCurrentIndex(-1)
		self.connect(self.chkout_drpmn_name, QtCore.SIGNAL('currentIndexChanged(int)'), self.chkout_reg_autofill)
		self.chkout_reg_device = QtGui.QLabel(self.CheckOut)
		self.chkout_reg_device.setGeometry(QtCore.QRect(10, 420, 121, 41))
		self.chkout_reg_device.setMinimumSize(QtCore.QSize(121, 41))
		self.chkout_reg_device.setMaximumSize(QtCore.QSize(121, 41))
		self.chkout_reg_device.setObjectName(_fromUtf8("chkout_reg_device"))
		self.chkout_reg_device_in = QtGui.QLineEdit(self.CheckOut)
		self.chkout_reg_device_in.setGeometry(QtCore.QRect(140, 420, 981, 41))
		self.chkout_reg_device_in.setMinimumSize(QtCore.QSize(981, 41))
		self.chkout_reg_device_in.setMaximumSize(QtCore.QSize(981, 41))
		self.chkout_reg_device_in.setObjectName(_fromUtf8("chkout_reg_device_in"))
		self.chkout_reg_device_in.setValidator(self.validator)
		self.chkout_reg_serial = QtGui.QLabel(self.CheckOut)
		self.chkout_reg_serial.setGeometry(QtCore.QRect(10, 470, 141, 41))
		self.chkout_reg_serial.setMinimumSize(QtCore.QSize(141, 41))
		self.chkout_reg_serial.setMaximumSize(QtCore.QSize(141, 41))
		self.chkout_reg_serial.setObjectName(_fromUtf8("chkout_reg_serial"))
		self.chkout_reg_serial_in = QtGui.QLineEdit(self.CheckOut)
		self.chkout_reg_serial_in.setGeometry(QtCore.QRect(150, 470, 351, 41))
		self.chkout_reg_serial_in.setMinimumSize(QtCore.QSize(351, 41))
		self.chkout_reg_serial_in.setMaximumSize(QtCore.QSize(351, 41))
		self.chkout_reg_serial_in.setObjectName(_fromUtf8("chkout_reg_serial_in"))
		self.chkout_reg_serial_in.setValidator(self.validator)
		self.chkout_reg_asset = QtGui.QLabel(self.CheckOut)
		self.chkout_reg_asset.setGeometry(QtCore.QRect(510, 470, 211, 41))
		self.chkout_reg_asset.setMinimumSize(QtCore.QSize(211, 41))
		self.chkout_reg_asset.setMaximumSize(QtCore.QSize(211, 41))
		self.chkout_reg_asset.setObjectName(_fromUtf8("chkout_reg_asset"))
		self.chkout_reg_asset_in = QtGui.QLineEdit(self.CheckOut)
		self.chkout_reg_asset_in.setGeometry(QtCore.QRect(720, 470, 401, 41))
		self.chkout_reg_asset_in.setMinimumSize(QtCore.QSize(401, 41))
		self.chkout_reg_asset_in.setMaximumSize(QtCore.QSize(401, 41))
		self.chkout_reg_asset_in.setObjectName(_fromUtf8("chkout_reg_asset_in"))
		self.chkout_reg_asset_in.setValidator(self.validator)
		self.chkout_reg_descr = QtGui.QLabel(self.CheckOut)
		self.chkout_reg_descr.setGeometry(QtCore.QRect(10, 520, 211, 41))
		self.chkout_reg_descr.setMinimumSize(QtCore.QSize(211, 41))
		self.chkout_reg_descr.setMaximumSize(QtCore.QSize(211, 41))
		self.chkout_reg_descr.setObjectName(_fromUtf8("chkout_reg_descr"))
		self.chkout_reg_descr_in = QtGui.QLineEdit(self.CheckOut)
		self.chkout_reg_descr_in.setGeometry(QtCore.QRect(210, 520, 911, 41))
		self.chkout_reg_descr_in.setMinimumSize(QtCore.QSize(911, 41))
		self.chkout_reg_descr_in.setMaximumSize(QtCore.QSize(911, 41))
		self.chkout_reg_descr_in.setText(_fromUtf8(""))
		self.chkout_reg_descr_in.setObjectName(_fromUtf8("chkout_reg_descr_in"))
		self.chkout_reg_descr_in.setValidator(self.validator)
		self.chkout_reg_submit = QtGui.QPushButton(self.CheckOut)
		self.chkout_reg_submit.setGeometry(QtCore.QRect(10, 570, 231, 51))
		self.chkout_reg_submit.setMinimumSize(QtCore.QSize(231, 51))
		self.chkout_reg_submit.setMaximumSize(QtCore.QSize(231, 51))
		self.chkout_reg_submit.setObjectName(_fromUtf8("chkout_reg_submit"))
		self.chkout_reg_submit.clicked.connect(self.reg_submit_chkout)
# End check out regular registered user ------------------------------------------^
		self.tabWidget.addTab(self.CheckOut, _fromUtf8(""))
		self.tableWidget = QtGui.QTableWidget(self.centralwidget)
		self.tableWidget.setGeometry(QtCore.QRect(9, 700, 1511, 161))
		font = QtGui.QFont()
		font.setPointSize(14)
		self.tableWidget.setFont(font)
		self.tableWidget.setObjectName(_fromUtf8("tableWidget"))
		self.tableWidget.setColumnCount(8)
		self.tableWidget.setRowCount(18)
		item = QtGui.QTableWidgetItem()
		self.tableWidget.setVerticalHeaderItem(0, item)
		item = QtGui.QTableWidgetItem()
		self.tableWidget.setVerticalHeaderItem(1, item)
		item = QtGui.QTableWidgetItem()
		self.tableWidget.setVerticalHeaderItem(2, item)
		item = QtGui.QTableWidgetItem()
		self.tableWidget.setVerticalHeaderItem(3, item)
		item = QtGui.QTableWidgetItem()
		self.tableWidget.setVerticalHeaderItem(4, item)
		item = QtGui.QTableWidgetItem()
		self.tableWidget.setVerticalHeaderItem(5, item)
		item = QtGui.QTableWidgetItem()
		self.tableWidget.setVerticalHeaderItem(6, item)
		item = QtGui.QTableWidgetItem()
		self.tableWidget.setVerticalHeaderItem(7, item)
		item = QtGui.QTableWidgetItem()
		self.tableWidget.setVerticalHeaderItem(8, item)
		item = QtGui.QTableWidgetItem()
		self.tableWidget.setVerticalHeaderItem(9, item)
		item = QtGui.QTableWidgetItem()
		self.tableWidget.setVerticalHeaderItem(10, item)
		item = QtGui.QTableWidgetItem()
		self.tableWidget.setVerticalHeaderItem(11, item)
		item = QtGui.QTableWidgetItem()
		self.tableWidget.setVerticalHeaderItem(12, item)
		item = QtGui.QTableWidgetItem()
		self.tableWidget.setVerticalHeaderItem(13, item)
		item = QtGui.QTableWidgetItem()
		self.tableWidget.setVerticalHeaderItem(14, item)
		item = QtGui.QTableWidgetItem()
		self.tableWidget.setVerticalHeaderItem(15, item)
		item = QtGui.QTableWidgetItem()
		self.tableWidget.setVerticalHeaderItem(16, item)
		item = QtGui.QTableWidgetItem()
		self.tableWidget.setVerticalHeaderItem(17, item)
		item = QtGui.QTableWidgetItem()
		font = QtGui.QFont()
		font.setBold(True)
		font.setWeight(75)
		item.setFont(font)
		item.setBackground(QtGui.QColor(255, 103, 105))
		self.tableWidget.setHorizontalHeaderItem(0, item)
		item = QtGui.QTableWidgetItem()
		font = QtGui.QFont()
		font.setBold(True)
		font.setWeight(75)
		item.setFont(font)
		item.setBackground(QtGui.QColor(0, 255, 127))
		self.tableWidget.setHorizontalHeaderItem(1, item)
		item = QtGui.QTableWidgetItem()
		font = QtGui.QFont()
		font.setBold(True)
		font.setWeight(75)
		item.setFont(font)
		item.setBackground(QtGui.QColor(0, 255, 127))
		self.tableWidget.setHorizontalHeaderItem(2, item)
		item = QtGui.QTableWidgetItem()
		font = QtGui.QFont()
		font.setBold(True)
		font.setWeight(75)
		item.setFont(font)
		item.setBackground(QtGui.QColor(0, 170, 255))
		self.tableWidget.setHorizontalHeaderItem(3, item)
		item = QtGui.QTableWidgetItem()
		font = QtGui.QFont()
		font.setBold(True)
		font.setWeight(75)
		item.setFont(font)
		item.setBackground(QtGui.QColor(0, 170, 255))
		self.tableWidget.setHorizontalHeaderItem(4, item)
		item = QtGui.QTableWidgetItem()
		font = QtGui.QFont()
		font.setBold(True)
		font.setWeight(75)
		item.setFont(font)
		item.setBackground(QtGui.QColor(223, 255, 133))
		self.tableWidget.setHorizontalHeaderItem(5, item)
		item = QtGui.QTableWidgetItem()
		font = QtGui.QFont()
		font.setBold(True)
		font.setWeight(75)
		item.setFont(font)
		item.setBackground(QtGui.QColor(255, 170, 0))
		self.tableWidget.setHorizontalHeaderItem(6, item)
		item = QtGui.QTableWidgetItem()
		font = QtGui.QFont()
		font.setBold(True)
		font.setWeight(75)
		item.setFont(font)
		item.setBackground(QtGui.QColor(255, 255, 127))
		self.tableWidget.setHorizontalHeaderItem(7, item)
		SHICheckIn.setCentralWidget(self.centralwidget)
		self.menubar = QtGui.QMenuBar(SHICheckIn)
		self.menubar.setGeometry(QtCore.QRect(0, 0, 1542, 21))
		self.menubar.setObjectName(_fromUtf8("menubar"))
		SHICheckIn.setMenuBar(self.menubar)
		self.statusbar = QtGui.QStatusBar(SHICheckIn)
		self.statusbar.setObjectName(_fromUtf8("statusbar"))
		SHICheckIn.setStatusBar(self.statusbar)
		self.dir_button = QtGui.QPushButton(self.centralwidget)
		self.dir_button.setGeometry(QtCore.QRect(10, 870, 361, 47))
		self.dir_button.setMinimumSize(QtCore.QSize(361, 47))
		self.dir_button.setMaximumSize(QtCore.QSize(361, 47))
		font = QtGui.QFont()
		font.setPointSize(24)
		self.dir_button.setFont(font)
		self.dir_button.setObjectName(_fromUtf8("dir_button"))
		self.dir_button.clicked.connect(self.open_directory)
		self.close_button = QtGui.QPushButton(self.centralwidget)
		self.close_button.setGeometry(QtCore.QRect(1190, 870, 321, 47))
		self.close_button.setMinimumSize(QtCore.QSize(321, 47))
		self.close_button.setMaximumSize(QtCore.QSize(321, 47))
		font = QtGui.QFont()
		font.setPointSize(24)
		self.close_button.setFont(font)
		self.close_button.setObjectName(_fromUtf8("close_button"))
		self.close_button.clicked.connect(QtCore.QCoreApplication.instance().quit)

		self.retranslateUi(SHICheckIn)
		self.tabWidget.setCurrentIndex(0)
		QtCore.QMetaObject.connectSlotsByName(SHICheckIn)

	def retranslateUi(self, SHICheckIn):
		SHICheckIn.setWindowTitle(_translate("SHICheckIn", "MainWindow", None))
		self.chkin_new_name.setText(_translate("SHICheckIn", "<html><head/><body><p><span style=\" font-size:24pt; font-weight:600;\">Name:</span></p></body></html>", None))
		self.chkin_new_descr.setText(_translate("SHICheckIn", "<html><head/><body><p><span style=\" font-size:24pt; font-weight:600;\">Description:</span></p></body></html>", None))
		self.chkin_new_serial.setText(_translate("SHICheckIn", "<html><head/><body><p><span style=\" font-size:24pt; font-weight:600;\">Serial #:</span></p></body></html>", None))
		self.chkin_new_asset.setText(_translate("SHICheckIn", "<html><head/><body><p><span style=\" font-size:24pt; font-weight:600;\">Asset Tag #:</span></p></body></html>", None))
		self.chkin_drpmn_device.setItemText(0, _translate("SHICheckIn", "HP Laptop", None))
		self.chkin_drpmn_device.setItemText(1, _translate("SHICheckIn", "Dell Laptop", None))
		self.chkin_drpmn_device.setItemText(2, _translate("SHICheckIn", "Microsoft Surface", None))
		self.chkin_drpmn_device.setItemText(3, _translate("SHICheckIn", "iPad", None))
		self.chkin_drpmn_device.setItemText(4, _translate("SHICheckIn", "USB Charger", None))
		self.chkin_drpmn_device.setItemText(5, _translate("SHICheckIn", "Unlisted (See Description)", None))
		self.chkin_new_device.setText(_translate("SHICheckIn", "<html><head/><body><p><span style=\" font-size:24pt; font-weight:600;\">Device:</span></p></body></html>", None))
		self.chkin_reg_submit.setText(_translate("SHICheckIn", "Check In", None))
		self.chkin_new_title.setText(_translate("SHICheckIn", "<html><head/><body><p><span style=\" font-size:24pt; font-weight:600;\">CHECK IN FOR NEW ENTRIES</span></p></body></html>", None))
		self.chkin_reg_title.setText(_translate("SHICheckIn", "<html><head/><body><p><span style=\" font-size:24pt; font-weight:600;\">CHECK IN PRESET REGULAR ENTRIES</span></p></body></html>", None))
		self.chkin_reg_descr.setText(_translate("SHICheckIn", "<html><head/><body><p><span style=\" font-size:24pt; font-weight:600;\">Description:</span></p></body></html>", None))
		self.chkin_reg_name.setText(_translate("SHICheckIn", "<html><head/><body><p><span style=\" font-size:24pt; font-weight:600;\">Name:</span></p></body></html>", None))
		self.chkin_reg_device.setText(_translate("SHICheckIn", "<html><head/><body><p><span style=\" font-size:24pt; font-weight:600;\">Device:</span></p></body></html>", None))
		self.chkin_reg_serial.setText(_translate("SHICheckIn", "<html><head/><body><p><span style=\" font-size:24pt; font-weight:600;\">Serial #:</span></p></body></html>", None))
		self.chkin_reg_asset.setText(_translate("SHICheckIn", "<html><head/><body><p><span style=\" font-size:24pt; font-weight:600;\">Asset Tag #:</span></p></body></html>", None))
		self.chkin_new_submit.setText(_translate("SHICheckIn", "Check In", None))
		self.chkin_drpmn_name.setItemText(0, _translate("SHICheckIn", "Ali Alloo", None))
		self.chkin_drpmn_name.setItemText(1, _translate("SHICheckIn", "Brian Covela", None))
		self.chkin_drpmn_name.setItemText(2, _translate("SHICheckIn", "Chris Sullo", None))
		self.chkin_drpmn_name.setItemText(3, _translate("SHICheckIn", "Curtis Booker", None))
		self.chkin_drpmn_name.setItemText(4, _translate("SHICheckIn", "Damian Latourette", None))
		self.chkin_drpmn_name.setItemText(5, _translate("SHICheckIn", "Daniel Carreira", None))
		self.chkin_drpmn_name.setItemText(6, _translate("SHICheckIn", "Edward Nunez", None))
		self.chkin_drpmn_name.setItemText(7, _translate("SHICheckIn", "Hector Rivera", None))
		self.chkin_drpmn_name.setItemText(8, _translate("SHICheckIn", "Jason Folmar", None))
		self.chkin_drpmn_name.setItemText(9, _translate("SHICheckIn", "Jose Lopez", None))
		self.chkin_drpmn_name.setItemText(10, _translate("SHICheckIn", "Josue Cardona", None))
		self.chkin_drpmn_name.setItemText(11, _translate("SHICheckIn", "Rhina Cardona", None))
		self.chkin_drpmn_name.setItemText(12, _translate("SHICheckIn", "Keith K", None))
		self.chkin_drpmn_name.setItemText(13, _translate("SHICheckIn", "Kendell Lucas", None))
		self.chkin_drpmn_name.setItemText(14, _translate("SHICheckIn", "Michael Scott", None))
		self.chkin_drpmn_name.setItemText(15, _translate("SHICheckIn", "Nihad Issa", None))
		self.chkin_drpmn_name.setItemText(16, _translate("SHICheckIn", "Oscar Vartanian", None))
		self.chkin_drpmn_name.setItemText(17, _translate("SHICheckIn", "Paul Brew", None))
		self.chkin_drpmn_name.setItemText(18, _translate("SHICheckIn", "Rick Karp", None))
		self.chkin_drpmn_name.setItemText(19, _translate("SHICheckIn", "Rob Harrison", None))
		self.chkin_drpmn_name.setItemText(20, _translate("SHICheckIn", "Rohan Grandeson", None))
		self.chkin_drpmn_name.setItemText(21, _translate("SHICheckIn", "Sean Larson", None))
		self.chkin_drpmn_name.setItemText(22, _translate("SHICheckIn", "Steve Alt", None))
		self.chkin_drpmn_name.setItemText(23, _translate("SHICheckIn", "Thomas O. Dell", None))
		self.chkin_drpmn_name.setItemText(24, _translate("SHICheckIn", "Tishonda Carson", None))
		self.chkin_drpmn_name.setItemText(25, _translate("SHICheckIn", "Tom Mililli", None))
		self.chkin_drpmn_name.setItemText(26, _translate("SHICheckIn", "William Morris", None))
		self.chkin_disclaimer.setHtml(_translate("SHICheckIn", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
		"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
		"p, li { white-space: pre-wrap; }\n"
		"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:24pt; font-weight:400; font-style:normal;\">\n"
		"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt; font-weight:600;\">Disclaimer:</span><span style=\" font-size:10pt;\"> Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</span></p>\n"
		"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:10pt;\"><br /></p>\n"
		"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt;\"> Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</span></p></body></html>", None))
		self.tabWidget.setTabText(self.tabWidget.indexOf(self.CheckIn), _translate("SHICheckIn", "Check In", None))
		self.chkout_reg_device.setText(_translate("SHICheckIn", "<html><head/><body><p><span style=\" font-weight:600;\">Device:</span></p></body></html>", None))
		self.chkout_new_submit.setText(_translate("SHICheckIn", "Check Out", None))
		self.chkout_new_title.setText(_translate("SHICheckIn", "<html><head/><body><p><span style=\" font-weight:600;\">CHECK IN FOR NEW ENTRIES</span></p></body></html>", None))
		self.chkout_new_device.setText(_translate("SHICheckIn", "<html><head/><body><p><span style=\" font-weight:600;\">Device:</span></p></body></html>", None))
		self.chkout_reg_submit.setText(_translate("SHICheckIn", "Check Out", None))
		self.chkout_reg_title.setText(_translate("SHICheckIn", "<html><head/><body><p><span style=\" font-weight:600;\">CHECK IN PRESET REGULAR ENTRIES</span></p></body></html>", None))
		self.chkout_new_serial.setToolTip(_translate("SHICheckIn", "<html><head/><body><p>Please enter serial number located on the device.</p></body></html>", None))
		self.chkout_new_serial.setText(_translate("SHICheckIn", "<html><head/><body><p><span style=\" font-weight:600;\">Serial #:</span></p></body></html>", None))
		self.chkout_reg_asset.setText(_translate("SHICheckIn", "<html><head/><body><p><span style=\" font-weight:600;\">Asset Tag #:</span></p></body></html>", None))
		self.chkout_new_descr.setToolTip(_translate("SHICheckIn", "<html><head/><body><p>If employee/vistor does not have a pre-defined device. Describe the device as accurate as possible.</p></body></html>", None))
		self.chkout_new_descr.setText(_translate("SHICheckIn", "<html><head/><body><p><span style=\" font-weight:600;\">Description:</span></p></body></html>", None))
		self.chkout_reg_serial.setToolTip(_translate("SHICheckIn", "<html><head/><body><p>Please enter serial number located on the device.</p></body></html>", None))
		self.chkout_reg_serial.setWhatsThis(_translate("SHICheckIn", "<html><head/><body><p><br/></p></body></html>", None))
		self.chkout_reg_serial.setText(_translate("SHICheckIn", "<html><head/><body><p><span style=\" font-weight:600;\">Serial #:</span></p></body></html>", None))
		self.chkout_drpmn_device.setItemText(0, _translate("SHICheckIn", "HP Laptop", None))
		self.chkout_drpmn_device.setItemText(1, _translate("SHICheckIn", "Dell Laptop", None))
		self.chkout_drpmn_device.setItemText(2, _translate("SHICheckIn", "Toshiba Laptop", None))
		self.chkout_drpmn_device.setItemText(3, _translate("SHICheckIn", "Lenovo Laptop", None))
		self.chkout_drpmn_device.setItemText(4, _translate("SHICheckIn", "Apple MacBook", None))
		self.chkout_drpmn_device.setItemText(5, _translate("SHICheckIn", "Samsung Tablet", None))
		self.chkout_drpmn_device.setItemText(6, _translate("SHICheckIn", "Microsoft Surface", None))
		self.chkout_drpmn_device.setItemText(7, _translate("SHICheckIn", "iPad", None))
		self.chkout_drpmn_device.setItemText(8, _translate("SHICheckIn", "iPad Mini", None))
		self.chkout_drpmn_device.setItemText(9, _translate("SHICheckIn", "USB Charger", None))
		self.chkout_drpmn_device.setItemText(10, _translate("SHICheckIn", "Unlisted (See Description)", None))
		self.chkout_reg_name.setText(_translate("SHICheckIn", "<html><head/><body><p><span style=\" font-weight:600;\">Name:</span></p></body></html>", None))
		self.chkout_reg_descr.setToolTip(_translate("SHICheckIn", "<html><head/><body><p>If employee/vistor does not have a pre-defined device. Describe the device as accurate as possible.</p></body></html>", None))
		self.chkout_reg_descr.setText(_translate("SHICheckIn", "<html><head/><body><p><span style=\" font-weight:600;\">Description:</span></p></body></html>", None))
		self.chkout_drpmn_name.setItemText(0, _translate("SHICheckIn", "Ali Alloo", None))
		self.chkout_drpmn_name.setItemText(1, _translate("SHICheckIn", "Brian Covela", None))
		self.chkout_drpmn_name.setItemText(2, _translate("SHICheckIn", "Chris Sullo", None))
		self.chkout_drpmn_name.setItemText(3, _translate("SHICheckIn", "Curtis Booker", None))
		self.chkout_drpmn_name.setItemText(4, _translate("SHICheckIn", "Damian Latourette", None))
		self.chkout_drpmn_name.setItemText(5, _translate("SHICheckIn", "Daniel Carreira", None))
		self.chkout_drpmn_name.setItemText(6, _translate("SHICheckIn", "Edward Nunez", None))
		self.chkout_drpmn_name.setItemText(7, _translate("SHICheckIn", "Hector Rivera", None))
		self.chkout_drpmn_name.setItemText(8, _translate("SHICheckIn", "Jason Folmar", None))
		self.chkout_drpmn_name.setItemText(9, _translate("SHICheckIn", "Jose Lopez", None))
		self.chkout_drpmn_name.setItemText(10, _translate("SHICheckIn", "Josue Cardona", None))
		self.chkout_drpmn_name.setItemText(11, _translate("SHICheckIn", "Rhina Cardona", None))
		self.chkout_drpmn_name.setItemText(12, _translate("SHICheckIn", "Keith K", None))
		self.chkout_drpmn_name.setItemText(13, _translate("SHICheckIn", "Kendell Lucas", None))
		self.chkout_drpmn_name.setItemText(14, _translate("SHICheckIn", "Michael Scott", None))
		self.chkout_drpmn_name.setItemText(15, _translate("SHICheckIn", "Nihad Issa", None))
		self.chkout_drpmn_name.setItemText(16, _translate("SHICheckIn", "Oscar Vartanian", None))
		self.chkout_drpmn_name.setItemText(17, _translate("SHICheckIn", "Paul Brew", None))
		self.chkout_drpmn_name.setItemText(18, _translate("SHICheckIn", "Rick Karp", None))
		self.chkout_drpmn_name.setItemText(19, _translate("SHICheckIn", "Rob Harrison", None))
		self.chkout_drpmn_name.setItemText(20, _translate("SHICheckIn", "Rohan Grandeson", None))
		self.chkout_drpmn_name.setItemText(21, _translate("SHICheckIn", "Sean Larson", None))
		self.chkout_drpmn_name.setItemText(22, _translate("SHICheckIn", "Steve Alt", None))
		self.chkout_drpmn_name.setItemText(23, _translate("SHICheckIn", "Thomas O. Dell", None))
		self.chkout_drpmn_name.setItemText(24, _translate("SHICheckIn", "Tishonda Carson", None))
		self.chkout_drpmn_name.setItemText(25, _translate("SHICheckIn", "Tom Mililli", None))
		self.chkout_drpmn_name.setItemText(26, _translate("SHICheckIn", "William Morris", None))
		self.chkout_new_asset.setText(_translate("SHICheckIn", "<html><head/><body><p><span style=\" font-weight:600;\">Asset Tag #:</span></p></body></html>", None))
		self.chkout_new_name.setText(_translate("SHICheckIn", "<html><head/><body><p><span style=\" font-weight:600;\">Name:</span></p></body></html>", None))
		self.chkout_disclaimer.setHtml(_translate("SHICheckIn", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
		"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
		"p, li { white-space: pre-wrap; }\n"
		"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:24pt; font-weight:400; font-style:normal;\">\n"
		"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt; font-weight:600;\">Disclaimer:</span><span style=\" font-size:10pt;\"> Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</span></p>\n"
		"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:10pt;\"><br /></p>\n"
		"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt;\"> Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</span></p></body></html>", None))
		self.tabWidget.setTabText(self.tabWidget.indexOf(self.CheckOut), _translate("SHICheckIn", "Check Out", None))
		self.dir_button.setText(_translate("SHICheckIn", "Open Directory", None))
		self.close_button.setText(_translate("SHICheckIn", "Close", None))
		item = self.tableWidget.verticalHeaderItem(0)
		item.setText(_translate("SHICheckIn", "1", None))
		item = self.tableWidget.verticalHeaderItem(1)
		item.setText(_translate("SHICheckIn", "2", None))
		item = self.tableWidget.verticalHeaderItem(2)
		item.setText(_translate("SHICheckIn", "3", None))
		item = self.tableWidget.verticalHeaderItem(3)
		item.setText(_translate("SHICheckIn", "4", None))
		item = self.tableWidget.verticalHeaderItem(4)
		item.setText(_translate("SHICheckIn", "5", None))
		item = self.tableWidget.verticalHeaderItem(5)
		item.setText(_translate("SHICheckIn", "6", None))
		item = self.tableWidget.verticalHeaderItem(6)
		item.setText(_translate("SHICheckIn", "7", None))
		item = self.tableWidget.verticalHeaderItem(7)
		item.setText(_translate("SHICheckIn", "8", None))
		item = self.tableWidget.verticalHeaderItem(8)
		item.setText(_translate("SHICheckIn", "10", None))
		item = self.tableWidget.verticalHeaderItem(9)
		item.setText(_translate("SHICheckIn", "11", None))
		item = self.tableWidget.verticalHeaderItem(10)
		item.setText(_translate("SHICheckIn", "12", None))
		item = self.tableWidget.verticalHeaderItem(11)
		item.setText(_translate("SHICheckIn", "13", None))
		item = self.tableWidget.verticalHeaderItem(12)
		item.setText(_translate("SHICheckIn", "14", None))
		item = self.tableWidget.verticalHeaderItem(13)
		item.setText(_translate("SHICheckIn", "15", None))
		item = self.tableWidget.verticalHeaderItem(14)
		item.setText(_translate("SHICheckIn", "17", None))
		item = self.tableWidget.verticalHeaderItem(15)
		item.setText(_translate("SHICheckIn", "18", None))
		item = self.tableWidget.verticalHeaderItem(16)
		item.setText(_translate("SHICheckIn", "19", None))
		item = self.tableWidget.verticalHeaderItem(17)
		item.setText(_translate("SHICheckIn", "20", None))
		item = self.tableWidget.horizontalHeaderItem(0)
		item.setText(_translate("SHICheckIn", "Name", None))
		item = self.tableWidget.horizontalHeaderItem(1)
		item.setText(_translate("SHICheckIn", "Device", None))
		item = self.tableWidget.horizontalHeaderItem(2)
		item.setText(_translate("SHICheckIn", "Item Desc.", None))
		item = self.tableWidget.horizontalHeaderItem(3)
		item.setText(_translate("SHICheckIn", "Serial #", None))
		item = self.tableWidget.horizontalHeaderItem(4)
		item.setText(_translate("SHICheckIn", "Asset Tag #", None))
		item = self.tableWidget.horizontalHeaderItem(5)
		item.setText(_translate("SHICheckIn", "IN", None))
		item = self.tableWidget.horizontalHeaderItem(6)
		item.setText(_translate("SHICheckIn", "OUT", None))
		item = self.tableWidget.horizontalHeaderItem(7)
		item.setText(_translate("SHICheckIn", "STAY IN", None))

# Mandatory parameters for proper function of GUI
if __name__ == '__main__':
	app = QtGui.QApplication(sys.argv)
	window = Ui_SHICheckIn()
	window.show()
	sys.exit(app.exec_())